//
// File generated by rootcint at Sat Jan 20 13:46:29 2024

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdIsrcdIg4numiCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "g4numiCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void data_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_data_t(void *p = 0);
   static void *newArray_data_t(Long_t size, void *p);
   static void delete_data_t(void *p);
   static void deleteArray_data_t(void *p);
   static void destruct_data_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::data_t*)
   {
      ::data_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::data_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("data_t", ::data_t::Class_Version(), "./include/../include/data_t.hh", 16,
                  typeid(::data_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::data_t::Dictionary, isa_proxy, 4,
                  sizeof(::data_t) );
      instance.SetNew(&new_data_t);
      instance.SetNewArray(&newArray_data_t);
      instance.SetDelete(&delete_data_t);
      instance.SetDeleteArray(&deleteArray_data_t);
      instance.SetDestructor(&destruct_data_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::data_t*)
   {
      return GenerateInitInstanceLocal((::data_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::data_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void hadmmtuple_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_hadmmtuple_t(void *p = 0);
   static void *newArray_hadmmtuple_t(Long_t size, void *p);
   static void delete_hadmmtuple_t(void *p);
   static void deleteArray_hadmmtuple_t(void *p);
   static void destruct_hadmmtuple_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::hadmmtuple_t*)
   {
      ::hadmmtuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::hadmmtuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("hadmmtuple_t", ::hadmmtuple_t::Class_Version(), "./include/../include/hadmmtuple_t.hh", 18,
                  typeid(::hadmmtuple_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::hadmmtuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::hadmmtuple_t) );
      instance.SetNew(&new_hadmmtuple_t);
      instance.SetNewArray(&newArray_hadmmtuple_t);
      instance.SetDelete(&delete_hadmmtuple_t);
      instance.SetDeleteArray(&deleteArray_hadmmtuple_t);
      instance.SetDestructor(&destruct_hadmmtuple_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::hadmmtuple_t*)
   {
      return GenerateInitInstanceLocal((::hadmmtuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void draytupleSPB_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_draytupleSPB_t(void *p = 0);
   static void *newArray_draytupleSPB_t(Long_t size, void *p);
   static void delete_draytupleSPB_t(void *p);
   static void deleteArray_draytupleSPB_t(void *p);
   static void destruct_draytupleSPB_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::draytupleSPB_t*)
   {
      ::draytupleSPB_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::draytupleSPB_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("draytupleSPB_t", ::draytupleSPB_t::Class_Version(), "./include/../include/draytupleSPB_t.hh", 18,
                  typeid(::draytupleSPB_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::draytupleSPB_t::Dictionary, isa_proxy, 4,
                  sizeof(::draytupleSPB_t) );
      instance.SetNew(&new_draytupleSPB_t);
      instance.SetNewArray(&newArray_draytupleSPB_t);
      instance.SetDelete(&delete_draytupleSPB_t);
      instance.SetDeleteArray(&deleteArray_draytupleSPB_t);
      instance.SetDestructor(&destruct_draytupleSPB_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::draytupleSPB_t*)
   {
      return GenerateInitInstanceLocal((::draytupleSPB_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Edep_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Edep_t(void *p = 0);
   static void *newArray_Edep_t(Long_t size, void *p);
   static void delete_Edep_t(void *p);
   static void deleteArray_Edep_t(void *p);
   static void destruct_Edep_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Edep_t*)
   {
      ::Edep_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Edep_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Edep_t", ::Edep_t::Class_Version(), "./include/../include/Edep_t.hh", 27,
                  typeid(::Edep_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Edep_t::Dictionary, isa_proxy, 4,
                  sizeof(::Edep_t) );
      instance.SetNew(&new_Edep_t);
      instance.SetNewArray(&newArray_Edep_t);
      instance.SetDelete(&delete_Edep_t);
      instance.SetDeleteArray(&deleteArray_Edep_t);
      instance.SetDestructor(&destruct_Edep_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Edep_t*)
   {
      return GenerateInitInstanceLocal((::Edep_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Edep_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void draytupleMIB_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_draytupleMIB_t(void *p = 0);
   static void *newArray_draytupleMIB_t(Long_t size, void *p);
   static void delete_draytupleMIB_t(void *p);
   static void deleteArray_draytupleMIB_t(void *p);
   static void destruct_draytupleMIB_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::draytupleMIB_t*)
   {
      ::draytupleMIB_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::draytupleMIB_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("draytupleMIB_t", ::draytupleMIB_t::Class_Version(), "./include/../include/draytupleMIB_t.hh", 27,
                  typeid(::draytupleMIB_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::draytupleMIB_t::Dictionary, isa_proxy, 4,
                  sizeof(::draytupleMIB_t) );
      instance.SetNew(&new_draytupleMIB_t);
      instance.SetNewArray(&newArray_draytupleMIB_t);
      instance.SetDelete(&delete_draytupleMIB_t);
      instance.SetDeleteArray(&deleteArray_draytupleMIB_t);
      instance.SetDestructor(&destruct_draytupleMIB_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::draytupleMIB_t*)
   {
      return GenerateInitInstanceLocal((::draytupleMIB_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void absbkgtuple_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_absbkgtuple_t(void *p = 0);
   static void *newArray_absbkgtuple_t(Long_t size, void *p);
   static void delete_absbkgtuple_t(void *p);
   static void deleteArray_absbkgtuple_t(void *p);
   static void destruct_absbkgtuple_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::absbkgtuple_t*)
   {
      ::absbkgtuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::absbkgtuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("absbkgtuple_t", ::absbkgtuple_t::Class_Version(), "./include/../include/absbkgtuple_t.hh", 15,
                  typeid(::absbkgtuple_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::absbkgtuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::absbkgtuple_t) );
      instance.SetNew(&new_absbkgtuple_t);
      instance.SetNewArray(&newArray_absbkgtuple_t);
      instance.SetDelete(&delete_absbkgtuple_t);
      instance.SetDeleteArray(&deleteArray_absbkgtuple_t);
      instance.SetDestructor(&destruct_absbkgtuple_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::absbkgtuple_t*)
   {
      return GenerateInitInstanceLocal((::absbkgtuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void zptuple_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_zptuple_t(void *p = 0);
   static void *newArray_zptuple_t(Long_t size, void *p);
   static void delete_zptuple_t(void *p);
   static void deleteArray_zptuple_t(void *p);
   static void destruct_zptuple_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::zptuple_t*)
   {
      ::zptuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::zptuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("zptuple_t", ::zptuple_t::Class_Version(), "./include/../include/zptuple_t.hh", 15,
                  typeid(::zptuple_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::zptuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::zptuple_t) );
      instance.SetNew(&new_zptuple_t);
      instance.SetNewArray(&newArray_zptuple_t);
      instance.SetDelete(&delete_zptuple_t);
      instance.SetDeleteArray(&deleteArray_zptuple_t);
      instance.SetDestructor(&destruct_zptuple_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::zptuple_t*)
   {
      return GenerateInitInstanceLocal((::zptuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::zptuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void h1trackingplane_exit_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_h1trackingplane_exit_t(void *p = 0);
   static void *newArray_h1trackingplane_exit_t(Long_t size, void *p);
   static void delete_h1trackingplane_exit_t(void *p);
   static void deleteArray_h1trackingplane_exit_t(void *p);
   static void destruct_h1trackingplane_exit_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::h1trackingplane_exit_t*)
   {
      ::h1trackingplane_exit_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::h1trackingplane_exit_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("h1trackingplane_exit_t", ::h1trackingplane_exit_t::Class_Version(), "./include/../include/h1trackingplane_exit_t.hh", 15,
                  typeid(::h1trackingplane_exit_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::h1trackingplane_exit_t::Dictionary, isa_proxy, 4,
                  sizeof(::h1trackingplane_exit_t) );
      instance.SetNew(&new_h1trackingplane_exit_t);
      instance.SetNewArray(&newArray_h1trackingplane_exit_t);
      instance.SetDelete(&delete_h1trackingplane_exit_t);
      instance.SetDeleteArray(&deleteArray_h1trackingplane_exit_t);
      instance.SetDestructor(&destruct_h1trackingplane_exit_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::h1trackingplane_exit_t*)
   {
      return GenerateInitInstanceLocal((::h1trackingplane_exit_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::h1trackingplane_exit_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ProdTuple_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ProdTuple_t(void *p = 0);
   static void *newArray_ProdTuple_t(Long_t size, void *p);
   static void delete_ProdTuple_t(void *p);
   static void deleteArray_ProdTuple_t(void *p);
   static void destruct_ProdTuple_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ProdTuple_t*)
   {
      ::ProdTuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ProdTuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ProdTuple_t", ::ProdTuple_t::Class_Version(), "./include/../include/ProdTuple_t.hh", 12,
                  typeid(::ProdTuple_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ProdTuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::ProdTuple_t) );
      instance.SetNew(&new_ProdTuple_t);
      instance.SetNewArray(&newArray_ProdTuple_t);
      instance.SetDelete(&delete_ProdTuple_t);
      instance.SetDeleteArray(&deleteArray_ProdTuple_t);
      instance.SetDestructor(&destruct_ProdTuple_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ProdTuple_t*)
   {
      return GenerateInitInstanceLocal((::ProdTuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TrackInfo_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TrackInfo_t(void *p = 0);
   static void *newArray_TrackInfo_t(Long_t size, void *p);
   static void delete_TrackInfo_t(void *p);
   static void deleteArray_TrackInfo_t(void *p);
   static void destruct_TrackInfo_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackInfo_t*)
   {
      ::TrackInfo_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrackInfo_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackInfo_t", ::TrackInfo_t::Class_Version(), "./include/../include/TrackInfo_t.hh", 12,
                  typeid(::TrackInfo_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TrackInfo_t::Dictionary, isa_proxy, 4,
                  sizeof(::TrackInfo_t) );
      instance.SetNew(&new_TrackInfo_t);
      instance.SetNewArray(&newArray_TrackInfo_t);
      instance.SetDelete(&delete_TrackInfo_t);
      instance.SetDeleteArray(&deleteArray_TrackInfo_t);
      instance.SetDestructor(&destruct_TrackInfo_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TrackInfo_t*)
   {
      return GenerateInitInstanceLocal((::TrackInfo_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace bsim {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void bsim_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("bsim", 0 /*version*/, "./include/../include/dk2nu.h", 35,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &bsim_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void bsim_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void bsimcLcLLocation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLLocation(void *p = 0);
   static void *newArray_bsimcLcLLocation(Long_t size, void *p);
   static void delete_bsimcLcLLocation(void *p);
   static void deleteArray_bsimcLcLLocation(void *p);
   static void destruct_bsimcLcLLocation(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::Location*)
   {
      ::bsim::Location *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::Location >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::Location", ::bsim::Location::Class_Version(), "./include/../include/dkmeta.h", 55,
                  typeid(::bsim::Location), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::Location::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::Location) );
      instance.SetNew(&new_bsimcLcLLocation);
      instance.SetNewArray(&newArray_bsimcLcLLocation);
      instance.SetDelete(&delete_bsimcLcLLocation);
      instance.SetDeleteArray(&deleteArray_bsimcLcLLocation);
      instance.SetDestructor(&destruct_bsimcLcLLocation);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::Location*)
   {
      return GenerateInitInstanceLocal((::bsim::Location*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::Location*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bsimcLcLDkMeta_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLDkMeta(void *p = 0);
   static void *newArray_bsimcLcLDkMeta(Long_t size, void *p);
   static void delete_bsimcLcLDkMeta(void *p);
   static void deleteArray_bsimcLcLDkMeta(void *p);
   static void destruct_bsimcLcLDkMeta(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::DkMeta*)
   {
      ::bsim::DkMeta *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::DkMeta >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::DkMeta", ::bsim::DkMeta::Class_Version(), "./include/../include/dkmeta.h", 79,
                  typeid(::bsim::DkMeta), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::DkMeta::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::DkMeta) );
      instance.SetNew(&new_bsimcLcLDkMeta);
      instance.SetNewArray(&newArray_bsimcLcLDkMeta);
      instance.SetDelete(&delete_bsimcLcLDkMeta);
      instance.SetDeleteArray(&deleteArray_bsimcLcLDkMeta);
      instance.SetDestructor(&destruct_bsimcLcLDkMeta);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::DkMeta*)
   {
      return GenerateInitInstanceLocal((::bsim::DkMeta*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::DkMeta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bsimcLcLNuRay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLNuRay(void *p = 0);
   static void *newArray_bsimcLcLNuRay(Long_t size, void *p);
   static void delete_bsimcLcLNuRay(void *p);
   static void deleteArray_bsimcLcLNuRay(void *p);
   static void destruct_bsimcLcLNuRay(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::NuRay*)
   {
      ::bsim::NuRay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::NuRay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::NuRay", ::bsim::NuRay::Class_Version(), "./include/../include/dk2nu.h", 94,
                  typeid(::bsim::NuRay), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::NuRay::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::NuRay) );
      instance.SetNew(&new_bsimcLcLNuRay);
      instance.SetNewArray(&newArray_bsimcLcLNuRay);
      instance.SetDelete(&delete_bsimcLcLNuRay);
      instance.SetDeleteArray(&deleteArray_bsimcLcLNuRay);
      instance.SetDestructor(&destruct_bsimcLcLNuRay);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::NuRay*)
   {
      return GenerateInitInstanceLocal((::bsim::NuRay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::NuRay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bsimcLcLDecay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLDecay(void *p = 0);
   static void *newArray_bsimcLcLDecay(Long_t size, void *p);
   static void delete_bsimcLcLDecay(void *p);
   static void deleteArray_bsimcLcLDecay(void *p);
   static void destruct_bsimcLcLDecay(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::Decay*)
   {
      ::bsim::Decay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::Decay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::Decay", ::bsim::Decay::Class_Version(), "./include/../include/dk2nu.h", 121,
                  typeid(::bsim::Decay), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::Decay::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::Decay) );
      instance.SetNew(&new_bsimcLcLDecay);
      instance.SetNewArray(&newArray_bsimcLcLDecay);
      instance.SetDelete(&delete_bsimcLcLDecay);
      instance.SetDeleteArray(&deleteArray_bsimcLcLDecay);
      instance.SetDestructor(&destruct_bsimcLcLDecay);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::Decay*)
   {
      return GenerateInitInstanceLocal((::bsim::Decay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::Decay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bsimcLcLAncestor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLAncestor(void *p = 0);
   static void *newArray_bsimcLcLAncestor(Long_t size, void *p);
   static void delete_bsimcLcLAncestor(void *p);
   static void deleteArray_bsimcLcLAncestor(void *p);
   static void destruct_bsimcLcLAncestor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::Ancestor*)
   {
      ::bsim::Ancestor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::Ancestor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::Ancestor", ::bsim::Ancestor::Class_Version(), "./include/../include/dk2nu.h", 174,
                  typeid(::bsim::Ancestor), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::Ancestor::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::Ancestor) );
      instance.SetNew(&new_bsimcLcLAncestor);
      instance.SetNewArray(&newArray_bsimcLcLAncestor);
      instance.SetDelete(&delete_bsimcLcLAncestor);
      instance.SetDeleteArray(&deleteArray_bsimcLcLAncestor);
      instance.SetDestructor(&destruct_bsimcLcLAncestor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::Ancestor*)
   {
      return GenerateInitInstanceLocal((::bsim::Ancestor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::Ancestor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bsimcLcLTgtExit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLTgtExit(void *p = 0);
   static void *newArray_bsimcLcLTgtExit(Long_t size, void *p);
   static void delete_bsimcLcLTgtExit(void *p);
   static void deleteArray_bsimcLcLTgtExit(void *p);
   static void destruct_bsimcLcLTgtExit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::TgtExit*)
   {
      ::bsim::TgtExit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::TgtExit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::TgtExit", ::bsim::TgtExit::Class_Version(), "./include/../include/dk2nu.h", 239,
                  typeid(::bsim::TgtExit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::TgtExit::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::TgtExit) );
      instance.SetNew(&new_bsimcLcLTgtExit);
      instance.SetNewArray(&newArray_bsimcLcLTgtExit);
      instance.SetDelete(&delete_bsimcLcLTgtExit);
      instance.SetDeleteArray(&deleteArray_bsimcLcLTgtExit);
      instance.SetDestructor(&destruct_bsimcLcLTgtExit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::TgtExit*)
   {
      return GenerateInitInstanceLocal((::bsim::TgtExit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::TgtExit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bsimcLcLTraj_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLTraj(void *p = 0);
   static void *newArray_bsimcLcLTraj(Long_t size, void *p);
   static void delete_bsimcLcLTraj(void *p);
   static void deleteArray_bsimcLcLTraj(void *p);
   static void destruct_bsimcLcLTraj(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::Traj*)
   {
      ::bsim::Traj *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::Traj >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::Traj", ::bsim::Traj::Class_Version(), "./include/../include/dk2nu.h", 268,
                  typeid(::bsim::Traj), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::Traj::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::Traj) );
      instance.SetNew(&new_bsimcLcLTraj);
      instance.SetNewArray(&newArray_bsimcLcLTraj);
      instance.SetDelete(&delete_bsimcLcLTraj);
      instance.SetDeleteArray(&deleteArray_bsimcLcLTraj);
      instance.SetDestructor(&destruct_bsimcLcLTraj);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::Traj*)
   {
      return GenerateInitInstanceLocal((::bsim::Traj*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::Traj*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bsimcLcLDk2Nu_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bsimcLcLDk2Nu(void *p = 0);
   static void *newArray_bsimcLcLDk2Nu(Long_t size, void *p);
   static void delete_bsimcLcLDk2Nu(void *p);
   static void deleteArray_bsimcLcLDk2Nu(void *p);
   static void destruct_bsimcLcLDk2Nu(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bsim::Dk2Nu*)
   {
      ::bsim::Dk2Nu *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bsim::Dk2Nu >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bsim::Dk2Nu", ::bsim::Dk2Nu::Class_Version(), "./include/../include/dk2nu.h", 293,
                  typeid(::bsim::Dk2Nu), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bsim::Dk2Nu::Dictionary, isa_proxy, 4,
                  sizeof(::bsim::Dk2Nu) );
      instance.SetNew(&new_bsimcLcLDk2Nu);
      instance.SetNewArray(&newArray_bsimcLcLDk2Nu);
      instance.SetDelete(&delete_bsimcLcLDk2Nu);
      instance.SetDeleteArray(&deleteArray_bsimcLcLDk2Nu);
      instance.SetDestructor(&destruct_bsimcLcLDk2Nu);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bsim::Dk2Nu*)
   {
      return GenerateInitInstanceLocal((::bsim::Dk2Nu*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bsim::Dk2Nu*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr data_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *data_t::Class_Name()
{
   return "data_t";
}

//______________________________________________________________________________
const char *data_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int data_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void data_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *data_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr hadmmtuple_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *hadmmtuple_t::Class_Name()
{
   return "hadmmtuple_t";
}

//______________________________________________________________________________
const char *hadmmtuple_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int hadmmtuple_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void hadmmtuple_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *hadmmtuple_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr draytupleSPB_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *draytupleSPB_t::Class_Name()
{
   return "draytupleSPB_t";
}

//______________________________________________________________________________
const char *draytupleSPB_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int draytupleSPB_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void draytupleSPB_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *draytupleSPB_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Edep_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Edep_t::Class_Name()
{
   return "Edep_t";
}

//______________________________________________________________________________
const char *Edep_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Edep_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Edep_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Edep_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr draytupleMIB_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *draytupleMIB_t::Class_Name()
{
   return "draytupleMIB_t";
}

//______________________________________________________________________________
const char *draytupleMIB_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int draytupleMIB_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void draytupleMIB_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *draytupleMIB_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr absbkgtuple_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *absbkgtuple_t::Class_Name()
{
   return "absbkgtuple_t";
}

//______________________________________________________________________________
const char *absbkgtuple_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int absbkgtuple_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void absbkgtuple_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *absbkgtuple_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr zptuple_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *zptuple_t::Class_Name()
{
   return "zptuple_t";
}

//______________________________________________________________________________
const char *zptuple_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int zptuple_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void zptuple_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *zptuple_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr h1trackingplane_exit_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *h1trackingplane_exit_t::Class_Name()
{
   return "h1trackingplane_exit_t";
}

//______________________________________________________________________________
const char *h1trackingplane_exit_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::h1trackingplane_exit_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int h1trackingplane_exit_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::h1trackingplane_exit_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void h1trackingplane_exit_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::h1trackingplane_exit_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *h1trackingplane_exit_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::h1trackingplane_exit_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ProdTuple_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ProdTuple_t::Class_Name()
{
   return "ProdTuple_t";
}

//______________________________________________________________________________
const char *ProdTuple_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ProdTuple_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ProdTuple_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ProdTuple_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TrackInfo_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TrackInfo_t::Class_Name()
{
   return "TrackInfo_t";
}

//______________________________________________________________________________
const char *TrackInfo_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackInfo_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackInfo_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackInfo_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr Location::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Location::Class_Name()
{
   return "bsim::Location";
}

//______________________________________________________________________________
const char *Location::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Location*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Location::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Location*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Location::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Location*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Location::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Location*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr DkMeta::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DkMeta::Class_Name()
{
   return "bsim::DkMeta";
}

//______________________________________________________________________________
const char *DkMeta::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::DkMeta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DkMeta::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::DkMeta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DkMeta::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::DkMeta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DkMeta::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::DkMeta*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr NuRay::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *NuRay::Class_Name()
{
   return "bsim::NuRay";
}

//______________________________________________________________________________
const char *NuRay::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::NuRay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NuRay::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::NuRay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NuRay::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::NuRay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NuRay::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::NuRay*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr Decay::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Decay::Class_Name()
{
   return "bsim::Decay";
}

//______________________________________________________________________________
const char *Decay::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Decay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Decay::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Decay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Decay::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Decay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Decay::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Decay*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr Ancestor::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Ancestor::Class_Name()
{
   return "bsim::Ancestor";
}

//______________________________________________________________________________
const char *Ancestor::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Ancestor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ancestor::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Ancestor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ancestor::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Ancestor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ancestor::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Ancestor*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr TgtExit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TgtExit::Class_Name()
{
   return "bsim::TgtExit";
}

//______________________________________________________________________________
const char *TgtExit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::TgtExit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TgtExit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::TgtExit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TgtExit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::TgtExit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TgtExit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::TgtExit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr Traj::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Traj::Class_Name()
{
   return "bsim::Traj";
}

//______________________________________________________________________________
const char *Traj::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Traj*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Traj::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Traj*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Traj::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Traj*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Traj::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Traj*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
      namespace bsim {
//______________________________________________________________________________
atomic_TClass_ptr Dk2Nu::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Dk2Nu::Class_Name()
{
   return "bsim::Dk2Nu";
}

//______________________________________________________________________________
const char *Dk2Nu::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Dk2Nu*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Dk2Nu::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Dk2Nu*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Dk2Nu::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Dk2Nu*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Dk2Nu::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bsim::Dk2Nu*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace bsim
//______________________________________________________________________________
void data_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class data_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(data_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(data_t::Class(),this);
   }
}

//______________________________________________________________________________
void data_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class data_t.
      TClass *R__cl = ::data_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtno", &evtno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamHWidth", &beamHWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamVWidth", &beamVWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamX", &beamX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamY", &beamY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonX", &protonX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonY", &protonY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonZ", &protonZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonPx", &protonPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonPy", &protonPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonPz", &protonPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuTarZ", &nuTarZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hornCurrent", &hornCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndxdz", &Ndxdz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndydz", &Ndydz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Npz", &Npz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nenergy", &Nenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NdxdzNear[11]", NdxdzNear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NdydzNear[11]", NdydzNear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NenergyN[11]", NenergyN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NWtNear[11]", NWtNear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NdxdzFar[2]", NdxdzFar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NdydzFar[2]", NdydzFar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NenergyF[2]", NenergyF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NWtFar[2]", NWtFar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Norig", &Norig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndecay", &Ndecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ntype", &Ntype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vx", &Vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vy", &Vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vz", &Vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdPx", &pdPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdPy", &pdPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdPz", &pdPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppdxdz", &ppdxdz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppdydz", &ppdydz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pppz", &pppz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppenergy", &ppenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppmedium", &ppmedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptype", &ptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muparpx", &muparpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muparpy", &muparpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muparpz", &muparpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupare", &mupare);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Necm", &Necm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nimpwt", &Nimpwt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xpoint", &xpoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ypoint", &ypoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpoint", &zpoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvx", &tvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvy", &tvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvz", &tvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpx", &tpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpy", &tpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpz", &tpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tptype", &tptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgen", &tgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrajectory", &ntrajectory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "overflow", &overflow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdg[10]", pdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackId[10]", trackId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentId[10]", parentId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startx[10]", startx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "starty[10]", starty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startz[10]", startz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stopx[10]", stopx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stopy[10]", stopy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stopz[10]", stopz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startpx[10]", startpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startpy[10]", startpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startpz[10]", startpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stoppx[10]", stoppx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stoppy[10]", stoppy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stoppz[10]", stoppz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pprodpx[10]", pprodpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pprodpy[10]", pprodpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pprodpz[10]", pprodpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "proc[10]", proc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ivol[10]", ivol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvol[10]", fvol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkx[10]", trkx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trky[10]", trky);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkz[10]", trkz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkpx[10]", trkpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkpy[10]", trkpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkpz[10]", trkpz);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_data_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::data_t : new ::data_t;
   }
   static void *newArray_data_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::data_t[nElements] : new ::data_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_data_t(void *p) {
      delete ((::data_t*)p);
   }
   static void deleteArray_data_t(void *p) {
      delete [] ((::data_t*)p);
   }
   static void destruct_data_t(void *p) {
      typedef ::data_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::data_t

//______________________________________________________________________________
void hadmmtuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class hadmmtuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(hadmmtuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(hadmmtuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void hadmmtuple_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class hadmmtuple_t.
      TClass *R__cl = ::hadmmtuple_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtno", &evtno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvx", &muvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvy", &muvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvz", &muvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonx", &protonx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protony", &protony);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonz", &protonz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupx", &mupx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupy", &mupy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupz", &mupz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muweight", &muweight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvx", &tvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvy", &tvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvz", &tvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpx", &tpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpy", &tpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpz", &tpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpptype", &tpptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nimpwt", &nimpwt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdvx", &pdvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdvy", &pdvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdvz", &pdvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdpx", &pdpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdpy", &pdpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdpz", &pdpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pptype", &pptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptype", &ptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppmedium", &ppmedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pgen", &pgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmxpos[3]", mmxpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmypos[3]", mmypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmzpos[3]", mmzpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpx[3]", mmpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpy[3]", mmpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpz[3]", mmpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell[3]", cell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpx_Edep[3]", mmpx_Edep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpy_Edep[3]", mmpy_Edep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpz_Edep[3]", mmpz_Edep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kSize", &kSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuray_px[13]", nuray_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuray_py[13]", nuray_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuray_pz[13]", nuray_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuray_E[13]", nuray_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuray_wgt[13]", nuray_wgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z1xpos", &z1xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z1ypos", &z1ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z1zpos", &z1zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z1px", &z1px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z1py", &z1py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z1pz", &z1pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z2xpos", &z2xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z2ypos", &z2ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z2zpos", &z2zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z2px", &z2px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z2py", &z2py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z2pz", &z2pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z3xpos", &z3xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z3ypos", &z3ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z3zpos", &z3zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z3px", &z3px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z3py", &z3py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z3pz", &z3pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z4xpos", &z4xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z4ypos", &z4ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z4zpos", &z4zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z4px", &z4px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z4py", &z4py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z4pz", &z4pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z5xpos", &z5xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z5ypos", &z5ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z5zpos", &z5zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z5px", &z5px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z5py", &z5py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z5pz", &z5pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z6xpos", &z6xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z6ypos", &z6ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z6zpos", &z6zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z6px", &z6px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z6py", &z6py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z6pz", &z6pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z7xpos", &z7xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z7ypos", &z7ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z7zpos", &z7zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z7px", &z7px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z7py", &z7py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z7pz", &z7pz);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_hadmmtuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hadmmtuple_t : new ::hadmmtuple_t;
   }
   static void *newArray_hadmmtuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hadmmtuple_t[nElements] : new ::hadmmtuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_hadmmtuple_t(void *p) {
      delete ((::hadmmtuple_t*)p);
   }
   static void deleteArray_hadmmtuple_t(void *p) {
      delete [] ((::hadmmtuple_t*)p);
   }
   static void destruct_hadmmtuple_t(void *p) {
      typedef ::hadmmtuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::hadmmtuple_t

//______________________________________________________________________________
void Edep_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class Edep_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Edep_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(Edep_t::Class(),this);
   }
}

//______________________________________________________________________________
void Edep_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Edep_t.
      TClass *R__cl = ::Edep_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTracks", &nTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wghtedNTracks", &wghtedNTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumEdepWghts", &sumEdepWghts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumWghtdEdep", &sumWghtdEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumWghtdEdep2", &sumWghtdEdep2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackVec", (void*)&trackVec);
      R__insp.InspectMember("vector<int>", (void*)&trackVec, "trackVec.", false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Edep_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Edep_t : new ::Edep_t;
   }
   static void *newArray_Edep_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Edep_t[nElements] : new ::Edep_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_Edep_t(void *p) {
      delete ((::Edep_t*)p);
   }
   static void deleteArray_Edep_t(void *p) {
      delete [] ((::Edep_t*)p);
   }
   static void destruct_Edep_t(void *p) {
      typedef ::Edep_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Edep_t

//______________________________________________________________________________
void draytupleMIB_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class draytupleMIB_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(draytupleMIB_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(draytupleMIB_t::Class(),this);
   }
}

//______________________________________________________________________________
void draytupleMIB_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class draytupleMIB_t.
      TClass *R__cl = ::draytupleMIB_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvx", &muvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvy", &muvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupx", &mupx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupy", &mupy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupz", &mupz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muweight", &muweight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nimpwt", &nimpwt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptype", &ptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmxpos[3]", mmxpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmypos[3]", mmypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpx[3]", mmpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpy[3]", mmpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpz[3]", mmpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell[3]", cell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm1_mu_edep", (void*)&mm1_mu_edep);
      R__insp.InspectMember("draytupleMIB_t::IFMap", (void*)&mm1_mu_edep, "mm1_mu_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm2_mu_edep", (void*)&mm2_mu_edep);
      R__insp.InspectMember("draytupleMIB_t::IFMap", (void*)&mm2_mu_edep, "mm2_mu_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm3_mu_edep", (void*)&mm3_mu_edep);
      R__insp.InspectMember("draytupleMIB_t::IFMap", (void*)&mm3_mu_edep, "mm3_mu_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm1_int_edep", (void*)&mm1_int_edep);
      R__insp.InspectMember("draytupleMIB_t::IEdepMap", (void*)&mm1_int_edep, "mm1_int_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm2_int_edep", (void*)&mm2_int_edep);
      R__insp.InspectMember("draytupleMIB_t::IEdepMap", (void*)&mm2_int_edep, "mm2_int_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm3_int_edep", (void*)&mm3_int_edep);
      R__insp.InspectMember("draytupleMIB_t::IEdepMap", (void*)&mm3_int_edep, "mm3_int_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm1_ext_edep", (void*)&mm1_ext_edep);
      R__insp.InspectMember("draytupleMIB_t::IEdepMap", (void*)&mm1_ext_edep, "mm1_ext_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm2_ext_edep", (void*)&mm2_ext_edep);
      R__insp.InspectMember("draytupleMIB_t::IEdepMap", (void*)&mm2_ext_edep, "mm2_ext_edep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm3_ext_edep", (void*)&mm3_ext_edep);
      R__insp.InspectMember("draytupleMIB_t::IEdepMap", (void*)&mm3_ext_edep, "mm3_ext_edep.", false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_draytupleMIB_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleMIB_t : new ::draytupleMIB_t;
   }
   static void *newArray_draytupleMIB_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleMIB_t[nElements] : new ::draytupleMIB_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_draytupleMIB_t(void *p) {
      delete ((::draytupleMIB_t*)p);
   }
   static void deleteArray_draytupleMIB_t(void *p) {
      delete [] ((::draytupleMIB_t*)p);
   }
   static void destruct_draytupleMIB_t(void *p) {
      typedef ::draytupleMIB_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::draytupleMIB_t

//______________________________________________________________________________
void draytupleSPB_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class draytupleSPB_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(draytupleSPB_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(draytupleSPB_t::Class(),this);
   }
}

//______________________________________________________________________________
void draytupleSPB_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class draytupleSPB_t.
      TClass *R__cl = ::draytupleSPB_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvx", &muvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvy", &muvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muvz", &muvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupx", &mupx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupy", &mupy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupz", &mupz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptype", &ptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmxpos[3]", mmxpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmypos[3]", mmypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpx[3]", mmpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpy[3]", mmpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmpz[3]", mmpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell[3]", cell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_edep[3]", mu_edep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "int_edep[3]", int_edep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ext_edep[3]", ext_edep);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_draytupleSPB_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleSPB_t : new ::draytupleSPB_t;
   }
   static void *newArray_draytupleSPB_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleSPB_t[nElements] : new ::draytupleSPB_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_draytupleSPB_t(void *p) {
      delete ((::draytupleSPB_t*)p);
   }
   static void deleteArray_draytupleSPB_t(void *p) {
      delete [] ((::draytupleSPB_t*)p);
   }
   static void destruct_draytupleSPB_t(void *p) {
      typedef ::draytupleSPB_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::draytupleSPB_t

//______________________________________________________________________________
void absbkgtuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class absbkgtuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(absbkgtuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(absbkgtuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void absbkgtuple_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class absbkgtuple_t.
      TClass *R__cl = ::absbkgtuple_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ihorn", &ihorn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgtz", &tgtz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptype", &ptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KE", &KE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "impwt", &impwt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgen", &tgen);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_absbkgtuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::absbkgtuple_t : new ::absbkgtuple_t;
   }
   static void *newArray_absbkgtuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::absbkgtuple_t[nElements] : new ::absbkgtuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_absbkgtuple_t(void *p) {
      delete ((::absbkgtuple_t*)p);
   }
   static void deleteArray_absbkgtuple_t(void *p) {
      delete [] ((::absbkgtuple_t*)p);
   }
   static void destruct_absbkgtuple_t(void *p) {
      typedef ::absbkgtuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::absbkgtuple_t

//______________________________________________________________________________
void zptuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class zptuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(zptuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(zptuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void zptuple_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class zptuple_t.
      TClass *R__cl = ::zptuple_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtno", &evtno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xposatz", &xposatz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yposatz", &yposatz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zposatz", &zposatz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmomatz", &xmomatz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymomatz", &ymomatz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zmomatz", &zmomatz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "matilen", &matilen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "field", &field);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pathlength", &pathlength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptypeatz", &ptypeatz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pidtype", &pidtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpoint", &zpoint);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_zptuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::zptuple_t : new ::zptuple_t;
   }
   static void *newArray_zptuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::zptuple_t[nElements] : new ::zptuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_zptuple_t(void *p) {
      delete ((::zptuple_t*)p);
   }
   static void deleteArray_zptuple_t(void *p) {
      delete [] ((::zptuple_t*)p);
   }
   static void destruct_zptuple_t(void *p) {
      typedef ::zptuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::zptuple_t

//______________________________________________________________________________
void h1trackingplane_exit_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class h1trackingplane_exit_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(h1trackingplane_exit_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(h1trackingplane_exit_t::Class(),this);
   }
}

//______________________________________________________________________________
void h1trackingplane_exit_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class h1trackingplane_exit_t.
      TClass *R__cl = ::h1trackingplane_exit_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtno", &evtno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "job", &job);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nimpwt", &Nimpwt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "impwt", &impwt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvx", &tvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvy", &tvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvz", &tvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpx", &tpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpy", &tpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpz", &tpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof", &tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tptype", &tptype);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_h1trackingplane_exit_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::h1trackingplane_exit_t : new ::h1trackingplane_exit_t;
   }
   static void *newArray_h1trackingplane_exit_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::h1trackingplane_exit_t[nElements] : new ::h1trackingplane_exit_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_h1trackingplane_exit_t(void *p) {
      delete ((::h1trackingplane_exit_t*)p);
   }
   static void deleteArray_h1trackingplane_exit_t(void *p) {
      delete [] ((::h1trackingplane_exit_t*)p);
   }
   static void destruct_h1trackingplane_exit_t(void *p) {
      typedef ::h1trackingplane_exit_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::h1trackingplane_exit_t

//______________________________________________________________________________
void ProdTuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class ProdTuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ProdTuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(ProdTuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void ProdTuple_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ProdTuple_t.
      TClass *R__cl = ::ProdTuple_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPart", &NPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDG[150]", PDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X[150][3]", X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "P[150][4]", P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XF[150]", XF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PT[150]", PT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FF[150]", FF);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ProdTuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ProdTuple_t : new ::ProdTuple_t;
   }
   static void *newArray_ProdTuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ProdTuple_t[nElements] : new ::ProdTuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_ProdTuple_t(void *p) {
      delete ((::ProdTuple_t*)p);
   }
   static void deleteArray_ProdTuple_t(void *p) {
      delete [] ((::ProdTuple_t*)p);
   }
   static void destruct_ProdTuple_t(void *p) {
      typedef ::ProdTuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ProdTuple_t

//______________________________________________________________________________
void TrackInfo_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrackInfo_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TrackInfo_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(TrackInfo_t::Class(),this);
   }
}

//______________________________________________________________________________
void TrackInfo_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TrackInfo_t.
      TClass *R__cl = ::TrackInfo_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pos", &Pos);
      R__insp.InspectMember(Pos, "Pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mom", &Mom);
      R__insp.InspectMember(Mom, "Mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDGcode", &PDGcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FromFast", &FromFast);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TrackInfo_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackInfo_t : new ::TrackInfo_t;
   }
   static void *newArray_TrackInfo_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackInfo_t[nElements] : new ::TrackInfo_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackInfo_t(void *p) {
      delete ((::TrackInfo_t*)p);
   }
   static void deleteArray_TrackInfo_t(void *p) {
      delete [] ((::TrackInfo_t*)p);
   }
   static void destruct_TrackInfo_t(void *p) {
      typedef ::TrackInfo_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TrackInfo_t

      namespace bsim {
//______________________________________________________________________________
void Location::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::Location.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::Location::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::Location::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void Location::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::Location.
      TClass *R__cl = ::bsim::Location::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLLocation(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Location : new ::bsim::Location;
   }
   static void *newArray_bsimcLcLLocation(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Location[nElements] : new ::bsim::Location[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLLocation(void *p) {
      delete ((::bsim::Location*)p);
   }
   static void deleteArray_bsimcLcLLocation(void *p) {
      delete [] ((::bsim::Location*)p);
   }
   static void destruct_bsimcLcLLocation(void *p) {
      typedef ::bsim::Location current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::Location

      namespace bsim {
//______________________________________________________________________________
void DkMeta::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::DkMeta.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::DkMeta::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::DkMeta::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void DkMeta::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::DkMeta.
      TClass *R__cl = ::bsim::DkMeta::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "job", &job);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pots", &pots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamsim", (void*)&beamsim);
      R__insp.InspectMember("string", (void*)&beamsim, "beamsim.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "physics", (void*)&physics);
      R__insp.InspectMember("string", (void*)&physics, "physics.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "physcuts", (void*)&physcuts);
      R__insp.InspectMember("string", (void*)&physcuts, "physcuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgtcfg", (void*)&tgtcfg);
      R__insp.InspectMember("string", (void*)&tgtcfg, "tgtcfg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "horncfg", (void*)&horncfg);
      R__insp.InspectMember("string", (void*)&horncfg, "horncfg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dkvolcfg", (void*)&dkvolcfg);
      R__insp.InspectMember("string", (void*)&dkvolcfg, "dkvolcfg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam0x", &beam0x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam0y", &beam0y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam0z", &beam0z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamhwidth", &beamhwidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamvwidth", &beamvwidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamdxdz", &beamdxdz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamdydz", &beamdydz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "location", (void*)&location);
      R__insp.InspectMember("vector<bsim::Location>", (void*)&location, "location.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vintnames", (void*)&vintnames);
      R__insp.InspectMember("vector<std::string>", (void*)&vintnames, "vintnames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vdblnames", (void*)&vdblnames);
      R__insp.InspectMember("vector<std::string>", (void*)&vdblnames, "vdblnames.", false);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLDkMeta(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::DkMeta : new ::bsim::DkMeta;
   }
   static void *newArray_bsimcLcLDkMeta(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::DkMeta[nElements] : new ::bsim::DkMeta[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLDkMeta(void *p) {
      delete ((::bsim::DkMeta*)p);
   }
   static void deleteArray_bsimcLcLDkMeta(void *p) {
      delete [] ((::bsim::DkMeta*)p);
   }
   static void destruct_bsimcLcLDkMeta(void *p) {
      typedef ::bsim::DkMeta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::DkMeta

      namespace bsim {
//______________________________________________________________________________
void NuRay::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::NuRay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::NuRay::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::NuRay::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void NuRay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::NuRay.
      TClass *R__cl = ::bsim::NuRay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wgt", &wgt);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLNuRay(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::NuRay : new ::bsim::NuRay;
   }
   static void *newArray_bsimcLcLNuRay(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::NuRay[nElements] : new ::bsim::NuRay[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLNuRay(void *p) {
      delete ((::bsim::NuRay*)p);
   }
   static void deleteArray_bsimcLcLNuRay(void *p) {
      delete [] ((::bsim::NuRay*)p);
   }
   static void destruct_bsimcLcLNuRay(void *p) {
      typedef ::bsim::NuRay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::NuRay

      namespace bsim {
//______________________________________________________________________________
void Decay::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::Decay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::Decay::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::Decay::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void Decay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::Decay.
      TClass *R__cl = ::bsim::Decay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "norig", &norig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndecay", &ndecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntype", &ntype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdpx", &pdpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdpy", &pdpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdpz", &pdpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppdxdz", &ppdxdz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppdydz", &ppdydz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pppz", &pppz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppenergy", &ppenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppmedium", &ppmedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptype", &ptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muparpx", &muparpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muparpy", &muparpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muparpz", &muparpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mupare", &mupare);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "necm", &necm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nimpwt", &nimpwt);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLDecay(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Decay : new ::bsim::Decay;
   }
   static void *newArray_bsimcLcLDecay(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Decay[nElements] : new ::bsim::Decay[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLDecay(void *p) {
      delete ((::bsim::Decay*)p);
   }
   static void deleteArray_bsimcLcLDecay(void *p) {
      delete [] ((::bsim::Decay*)p);
   }
   static void destruct_bsimcLcLDecay(void *p) {
      typedef ::bsim::Decay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::Decay

      namespace bsim {
//______________________________________________________________________________
void Ancestor::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::Ancestor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::Ancestor::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::Ancestor::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void Ancestor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::Ancestor.
      TClass *R__cl = ::bsim::Ancestor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdg", &pdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startx", &startx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "starty", &starty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startz", &startz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startt", &startt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startpx", &startpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startpy", &startpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startpz", &startpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stoppx", &stoppx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stoppy", &stoppy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stoppz", &stoppz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polx", &polx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "poly", &poly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polz", &polz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pprodpx", &pprodpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pprodpy", &pprodpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pprodpz", &pprodpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nucleus", &nucleus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "proc", (void*)&proc);
      R__insp.InspectMember("string", (void*)&proc, "proc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ivol", (void*)&ivol);
      R__insp.InspectMember("string", (void*)&ivol, "ivol.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "imat", (void*)&imat);
      R__insp.InspectMember("string", (void*)&imat, "imat.", false);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLAncestor(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Ancestor : new ::bsim::Ancestor;
   }
   static void *newArray_bsimcLcLAncestor(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Ancestor[nElements] : new ::bsim::Ancestor[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLAncestor(void *p) {
      delete ((::bsim::Ancestor*)p);
   }
   static void deleteArray_bsimcLcLAncestor(void *p) {
      delete [] ((::bsim::Ancestor*)p);
   }
   static void destruct_bsimcLcLAncestor(void *p) {
      typedef ::bsim::Ancestor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::Ancestor

      namespace bsim {
//______________________________________________________________________________
void TgtExit::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::TgtExit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::TgtExit::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::TgtExit::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void TgtExit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::TgtExit.
      TClass *R__cl = ::bsim::TgtExit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvx", &tvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvy", &tvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tvz", &tvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpx", &tpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpy", &tpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpz", &tpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tptype", &tptype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgen", &tgen);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLTgtExit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::TgtExit : new ::bsim::TgtExit;
   }
   static void *newArray_bsimcLcLTgtExit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::TgtExit[nElements] : new ::bsim::TgtExit[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLTgtExit(void *p) {
      delete ((::bsim::TgtExit*)p);
   }
   static void deleteArray_bsimcLcLTgtExit(void *p) {
      delete [] ((::bsim::TgtExit*)p);
   }
   static void destruct_bsimcLcLTgtExit(void *p) {
      typedef ::bsim::TgtExit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::TgtExit

      namespace bsim {
//______________________________________________________________________________
void Traj::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::Traj.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::Traj::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::Traj::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void Traj::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::Traj.
      TClass *R__cl = ::bsim::Traj::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkx", &trkx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trky", &trky);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkz", &trkz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkpx", &trkpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkpy", &trkpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkpz", &trkpz);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLTraj(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Traj : new ::bsim::Traj;
   }
   static void *newArray_bsimcLcLTraj(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Traj[nElements] : new ::bsim::Traj[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLTraj(void *p) {
      delete ((::bsim::Traj*)p);
   }
   static void deleteArray_bsimcLcLTraj(void *p) {
      delete [] ((::bsim::Traj*)p);
   }
   static void destruct_bsimcLcLTraj(void *p) {
      typedef ::bsim::Traj current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::Traj

      namespace bsim {
//______________________________________________________________________________
void Dk2Nu::Streamer(TBuffer &R__b)
{
   // Stream an object of class bsim::Dk2Nu.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bsim::Dk2Nu::Class(),this);
   } else {
      R__b.WriteClassBuffer(bsim::Dk2Nu::Class(),this);
   }
}

} // namespace bsim
//______________________________________________________________________________
      namespace bsim {
void Dk2Nu::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bsim::Dk2Nu.
      TClass *R__cl = ::bsim::Dk2Nu::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "job", &job);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "potnum", &potnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decay", &decay);
      R__insp.InspectMember(decay, "decay.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuray", (void*)&nuray);
      R__insp.InspectMember("vector<bsim::NuRay>", (void*)&nuray, "nuray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ancestor", (void*)&ancestor);
      R__insp.InspectMember("vector<bsim::Ancestor>", (void*)&ancestor, "ancestor.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tgtexit", &tgtexit);
      R__insp.InspectMember(tgtexit, "tgtexit.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "traj", (void*)&traj);
      R__insp.InspectMember("vector<bsim::Traj>", (void*)&traj, "traj.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flagbits", &flagbits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vint", (void*)&vint);
      R__insp.InspectMember("vector<Int_t>", (void*)&vint, "vint.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vdbl", (void*)&vdbl);
      R__insp.InspectMember("vector<Double_t>", (void*)&vdbl, "vdbl.", false);
}

} // namespace bsim
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bsimcLcLDk2Nu(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Dk2Nu : new ::bsim::Dk2Nu;
   }
   static void *newArray_bsimcLcLDk2Nu(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::bsim::Dk2Nu[nElements] : new ::bsim::Dk2Nu[nElements];
   }
   // Wrapper around operator delete
   static void delete_bsimcLcLDk2Nu(void *p) {
      delete ((::bsim::Dk2Nu*)p);
   }
   static void deleteArray_bsimcLcLDk2Nu(void *p) {
      delete [] ((::bsim::Dk2Nu*)p);
   }
   static void destruct_bsimcLcLDk2Nu(void *p) {
      typedef ::bsim::Dk2Nu current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bsim::Dk2Nu

namespace ROOTDict {
   void maplEintcOEdep_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOEdep_tgR_Dictionary();
   static void *new_maplEintcOEdep_tgR(void *p = 0);
   static void *newArray_maplEintcOEdep_tgR(Long_t size, void *p);
   static void delete_maplEintcOEdep_tgR(void *p);
   static void deleteArray_maplEintcOEdep_tgR(void *p);
   static void destruct_maplEintcOEdep_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,Edep_t>*)
   {
      map<int,Edep_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,Edep_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,Edep_t>", -2, "prec_stl/map", 63,
                  typeid(map<int,Edep_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOEdep_tgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,Edep_t>) );
      instance.SetNew(&new_maplEintcOEdep_tgR);
      instance.SetNewArray(&newArray_maplEintcOEdep_tgR);
      instance.SetDelete(&delete_maplEintcOEdep_tgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOEdep_tgR);
      instance.SetDestructor(&destruct_maplEintcOEdep_tgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,Edep_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,Edep_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOEdep_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,Edep_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOEdep_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Edep_t> : new map<int,Edep_t>;
   }
   static void *newArray_maplEintcOEdep_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Edep_t>[nElements] : new map<int,Edep_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOEdep_tgR(void *p) {
      delete ((map<int,Edep_t>*)p);
   }
   static void deleteArray_maplEintcOEdep_tgR(void *p) {
      delete [] ((map<int,Edep_t>*)p);
   }
   static void destruct_maplEintcOEdep_tgR(void *p) {
      typedef map<int,Edep_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,Edep_t>

namespace ROOTDict {
   void maplEintcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOfloatgR_Dictionary();
   static void *new_maplEintcOfloatgR(void *p = 0);
   static void *newArray_maplEintcOfloatgR(Long_t size, void *p);
   static void delete_maplEintcOfloatgR(void *p);
   static void deleteArray_maplEintcOfloatgR(void *p);
   static void destruct_maplEintcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,float>*)
   {
      map<int,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,float>", -2, "prec_stl/map", 63,
                  typeid(map<int,float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,float>) );
      instance.SetNew(&new_maplEintcOfloatgR);
      instance.SetNewArray(&newArray_maplEintcOfloatgR);
      instance.SetDelete(&delete_maplEintcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOfloatgR);
      instance.SetDestructor(&destruct_maplEintcOfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,float> : new map<int,float>;
   }
   static void *newArray_maplEintcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,float>[nElements] : new map<int,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOfloatgR(void *p) {
      delete ((map<int,float>*)p);
   }
   static void deleteArray_maplEintcOfloatgR(void *p) {
      delete [] ((map<int,float>*)p);
   }
   static void destruct_maplEintcOfloatgR(void *p) {
      typedef map<int,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,float>

namespace ROOTDict {
   void vectorlEbsimcLcLAncestorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEbsimcLcLAncestorgR_Dictionary();
   static void *new_vectorlEbsimcLcLAncestorgR(void *p = 0);
   static void *newArray_vectorlEbsimcLcLAncestorgR(Long_t size, void *p);
   static void delete_vectorlEbsimcLcLAncestorgR(void *p);
   static void deleteArray_vectorlEbsimcLcLAncestorgR(void *p);
   static void destruct_vectorlEbsimcLcLAncestorgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bsim::Ancestor>*)
   {
      vector<bsim::Ancestor> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bsim::Ancestor>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bsim::Ancestor>", -2, "prec_stl/vector", 49,
                  typeid(vector<bsim::Ancestor>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEbsimcLcLAncestorgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bsim::Ancestor>) );
      instance.SetNew(&new_vectorlEbsimcLcLAncestorgR);
      instance.SetNewArray(&newArray_vectorlEbsimcLcLAncestorgR);
      instance.SetDelete(&delete_vectorlEbsimcLcLAncestorgR);
      instance.SetDeleteArray(&deleteArray_vectorlEbsimcLcLAncestorgR);
      instance.SetDestructor(&destruct_vectorlEbsimcLcLAncestorgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bsim::Ancestor> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bsim::Ancestor>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEbsimcLcLAncestorgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bsim::Ancestor>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEbsimcLcLAncestorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::Ancestor> : new vector<bsim::Ancestor>;
   }
   static void *newArray_vectorlEbsimcLcLAncestorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::Ancestor>[nElements] : new vector<bsim::Ancestor>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEbsimcLcLAncestorgR(void *p) {
      delete ((vector<bsim::Ancestor>*)p);
   }
   static void deleteArray_vectorlEbsimcLcLAncestorgR(void *p) {
      delete [] ((vector<bsim::Ancestor>*)p);
   }
   static void destruct_vectorlEbsimcLcLAncestorgR(void *p) {
      typedef vector<bsim::Ancestor> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bsim::Ancestor>

namespace ROOTDict {
   void vectorlEbsimcLcLLocationgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEbsimcLcLLocationgR_Dictionary();
   static void *new_vectorlEbsimcLcLLocationgR(void *p = 0);
   static void *newArray_vectorlEbsimcLcLLocationgR(Long_t size, void *p);
   static void delete_vectorlEbsimcLcLLocationgR(void *p);
   static void deleteArray_vectorlEbsimcLcLLocationgR(void *p);
   static void destruct_vectorlEbsimcLcLLocationgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bsim::Location>*)
   {
      vector<bsim::Location> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bsim::Location>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bsim::Location>", -2, "prec_stl/vector", 49,
                  typeid(vector<bsim::Location>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEbsimcLcLLocationgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bsim::Location>) );
      instance.SetNew(&new_vectorlEbsimcLcLLocationgR);
      instance.SetNewArray(&newArray_vectorlEbsimcLcLLocationgR);
      instance.SetDelete(&delete_vectorlEbsimcLcLLocationgR);
      instance.SetDeleteArray(&deleteArray_vectorlEbsimcLcLLocationgR);
      instance.SetDestructor(&destruct_vectorlEbsimcLcLLocationgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bsim::Location> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bsim::Location>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEbsimcLcLLocationgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bsim::Location>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEbsimcLcLLocationgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::Location> : new vector<bsim::Location>;
   }
   static void *newArray_vectorlEbsimcLcLLocationgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::Location>[nElements] : new vector<bsim::Location>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEbsimcLcLLocationgR(void *p) {
      delete ((vector<bsim::Location>*)p);
   }
   static void deleteArray_vectorlEbsimcLcLLocationgR(void *p) {
      delete [] ((vector<bsim::Location>*)p);
   }
   static void destruct_vectorlEbsimcLcLLocationgR(void *p) {
      typedef vector<bsim::Location> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bsim::Location>

namespace ROOTDict {
   void vectorlEbsimcLcLNuRaygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEbsimcLcLNuRaygR_Dictionary();
   static void *new_vectorlEbsimcLcLNuRaygR(void *p = 0);
   static void *newArray_vectorlEbsimcLcLNuRaygR(Long_t size, void *p);
   static void delete_vectorlEbsimcLcLNuRaygR(void *p);
   static void deleteArray_vectorlEbsimcLcLNuRaygR(void *p);
   static void destruct_vectorlEbsimcLcLNuRaygR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bsim::NuRay>*)
   {
      vector<bsim::NuRay> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bsim::NuRay>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bsim::NuRay>", -2, "prec_stl/vector", 49,
                  typeid(vector<bsim::NuRay>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEbsimcLcLNuRaygR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bsim::NuRay>) );
      instance.SetNew(&new_vectorlEbsimcLcLNuRaygR);
      instance.SetNewArray(&newArray_vectorlEbsimcLcLNuRaygR);
      instance.SetDelete(&delete_vectorlEbsimcLcLNuRaygR);
      instance.SetDeleteArray(&deleteArray_vectorlEbsimcLcLNuRaygR);
      instance.SetDestructor(&destruct_vectorlEbsimcLcLNuRaygR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bsim::NuRay> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bsim::NuRay>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEbsimcLcLNuRaygR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bsim::NuRay>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEbsimcLcLNuRaygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::NuRay> : new vector<bsim::NuRay>;
   }
   static void *newArray_vectorlEbsimcLcLNuRaygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::NuRay>[nElements] : new vector<bsim::NuRay>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEbsimcLcLNuRaygR(void *p) {
      delete ((vector<bsim::NuRay>*)p);
   }
   static void deleteArray_vectorlEbsimcLcLNuRaygR(void *p) {
      delete [] ((vector<bsim::NuRay>*)p);
   }
   static void destruct_vectorlEbsimcLcLNuRaygR(void *p) {
      typedef vector<bsim::NuRay> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bsim::NuRay>

namespace ROOTDict {
   void vectorlEbsimcLcLTrajgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEbsimcLcLTrajgR_Dictionary();
   static void *new_vectorlEbsimcLcLTrajgR(void *p = 0);
   static void *newArray_vectorlEbsimcLcLTrajgR(Long_t size, void *p);
   static void delete_vectorlEbsimcLcLTrajgR(void *p);
   static void deleteArray_vectorlEbsimcLcLTrajgR(void *p);
   static void destruct_vectorlEbsimcLcLTrajgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bsim::Traj>*)
   {
      vector<bsim::Traj> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bsim::Traj>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bsim::Traj>", -2, "prec_stl/vector", 49,
                  typeid(vector<bsim::Traj>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEbsimcLcLTrajgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bsim::Traj>) );
      instance.SetNew(&new_vectorlEbsimcLcLTrajgR);
      instance.SetNewArray(&newArray_vectorlEbsimcLcLTrajgR);
      instance.SetDelete(&delete_vectorlEbsimcLcLTrajgR);
      instance.SetDeleteArray(&deleteArray_vectorlEbsimcLcLTrajgR);
      instance.SetDestructor(&destruct_vectorlEbsimcLcLTrajgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bsim::Traj> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bsim::Traj>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEbsimcLcLTrajgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bsim::Traj>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEbsimcLcLTrajgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::Traj> : new vector<bsim::Traj>;
   }
   static void *newArray_vectorlEbsimcLcLTrajgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bsim::Traj>[nElements] : new vector<bsim::Traj>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEbsimcLcLTrajgR(void *p) {
      delete ((vector<bsim::Traj>*)p);
   }
   static void deleteArray_vectorlEbsimcLcLTrajgR(void *p) {
      delete [] ((vector<bsim::Traj>*)p);
   }
   static void destruct_vectorlEbsimcLcLTrajgR(void *p) {
      typedef vector<bsim::Traj> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bsim::Traj>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

/********************************************************
* ./src/g4numiCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableg4numiCint();

extern "C" void G__set_cpp_environmentg4numiCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/data_t.hh");
  G__add_compiledheader("../include/hadmmtuple_t.hh");
  G__add_compiledheader("../include/draytupleSPB_t.hh");
  G__add_compiledheader("../include/Edep_t.hh");
  G__add_compiledheader("../include/draytupleMIB_t.hh");
  G__add_compiledheader("../include/absbkgtuple_t.hh");
  G__add_compiledheader("../include/zptuple_t.hh");
  G__add_compiledheader("../include/h1trackingplane_exit_t.hh");
  G__add_compiledheader("../include/ProdTuple_t.hh");
  G__add_compiledheader("../include/TrackInfo_t.hh");
  G__add_compiledheader("../include/dkmeta.h");
  G__add_compiledheader("../include/dk2nu.h");
  G__cpp_reset_tagtableg4numiCint();
}
#include <new>
extern "C" int G__cpp_dllrevg4numiCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* data_t */
static int G__g4numiCint_216_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   data_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new data_t[n];
     } else {
       p = new((void*) gvp) data_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new data_t;
     } else {
       p = new((void*) gvp) data_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((data_t*) G__getstructoffset())->Clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((data_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) data_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) data_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      data_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const data_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) data_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_216_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) data_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_216_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   data_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new data_t(*(data_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef data_t G__Tdata_t;
static int G__g4numiCint_216_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (data_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((data_t*) (soff+(sizeof(data_t)*i)))->~G__Tdata_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (data_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((data_t*) (soff))->~G__Tdata_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_216_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   data_t* dest = (data_t*) G__getstructoffset();
   *dest = *(data_t*) libp->para[0].ref;
   const data_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* hadmmtuple_t */
static int G__g4numiCint_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hadmmtuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hadmmtuple_t[n];
     } else {
       p = new((void*) gvp) hadmmtuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hadmmtuple_t;
     } else {
       p = new((void*) gvp) hadmmtuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) hadmmtuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) hadmmtuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      hadmmtuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const hadmmtuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hadmmtuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hadmmtuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_217_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   hadmmtuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new hadmmtuple_t(*(hadmmtuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef hadmmtuple_t G__Thadmmtuple_t;
static int G__g4numiCint_217_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (hadmmtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((hadmmtuple_t*) (soff+(sizeof(hadmmtuple_t)*i)))->~G__Thadmmtuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (hadmmtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((hadmmtuple_t*) (soff))->~G__Thadmmtuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_217_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hadmmtuple_t* dest = (hadmmtuple_t*) G__getstructoffset();
   *dest = *(hadmmtuple_t*) libp->para[0].ref;
   const hadmmtuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* draytupleSPB_t */
static int G__g4numiCint_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleSPB_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleSPB_t[n];
     } else {
       p = new((void*) gvp) draytupleSPB_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleSPB_t;
     } else {
       p = new((void*) gvp) draytupleSPB_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) draytupleSPB_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleSPB_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) draytupleSPB_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      draytupleSPB_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const draytupleSPB_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleSPB_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleSPB_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleSPB_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleSPB_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   draytupleSPB_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new draytupleSPB_t(*(draytupleSPB_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef draytupleSPB_t G__TdraytupleSPB_t;
static int G__g4numiCint_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (draytupleSPB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((draytupleSPB_t*) (soff+(sizeof(draytupleSPB_t)*i)))->~G__TdraytupleSPB_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (draytupleSPB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((draytupleSPB_t*) (soff))->~G__TdraytupleSPB_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleSPB_t* dest = (draytupleSPB_t*) G__getstructoffset();
   *dest = *(draytupleSPB_t*) libp->para[0].ref;
   const draytupleSPB_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Edep_t */
static int G__g4numiCint_454_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Edep_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Edep_t[n];
     } else {
       p = new((void*) gvp) Edep_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Edep_t;
     } else {
       p = new((void*) gvp) Edep_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->ClearVector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Edep_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edep_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Edep_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Edep_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Edep_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edep_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Edep_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edep_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_454_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Edep_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_454_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Edep_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Edep_t(*(Edep_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Edep_t G__TEdep_t;
static int G__g4numiCint_454_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Edep_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Edep_t*) (soff+(sizeof(Edep_t)*i)))->~G__TEdep_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Edep_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Edep_t*) (soff))->~G__TEdep_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_454_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Edep_t* dest = (Edep_t*) G__getstructoffset();
   *dest = *(Edep_t*) libp->para[0].ref;
   const Edep_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* draytupleMIB_t */
static int G__g4numiCint_459_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleMIB_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleMIB_t[n];
     } else {
       p = new((void*) gvp) draytupleMIB_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleMIB_t;
     } else {
       p = new((void*) gvp) draytupleMIB_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetMuEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetIntEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, *(string*) libp->para[2].ref));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetIntEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetExtEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, *(string*) libp->para[2].ref));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetExtEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->SetMuEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->SetIntEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const double) G__double(libp->para[2]), (const int) G__int(libp->para[3])
, (const double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->SetExtEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const double) G__double(libp->para[2]), (const int) G__int(libp->para[3])
, (const double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->ClearTrackIDVectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) draytupleMIB_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleMIB_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) draytupleMIB_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      draytupleMIB_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const draytupleMIB_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleMIB_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleMIB_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleMIB_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_459_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleMIB_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_459_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   draytupleMIB_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new draytupleMIB_t(*(draytupleMIB_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef draytupleMIB_t G__TdraytupleMIB_t;
static int G__g4numiCint_459_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (draytupleMIB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((draytupleMIB_t*) (soff+(sizeof(draytupleMIB_t)*i)))->~G__TdraytupleMIB_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (draytupleMIB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((draytupleMIB_t*) (soff))->~G__TdraytupleMIB_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_459_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleMIB_t* dest = (draytupleMIB_t*) G__getstructoffset();
   *dest = *(draytupleMIB_t*) libp->para[0].ref;
   const draytupleMIB_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* absbkgtuple_t */
static int G__g4numiCint_474_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   absbkgtuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new absbkgtuple_t[n];
     } else {
       p = new((void*) gvp) absbkgtuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new absbkgtuple_t;
     } else {
       p = new((void*) gvp) absbkgtuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) absbkgtuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) absbkgtuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) absbkgtuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      absbkgtuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const absbkgtuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) absbkgtuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) absbkgtuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) absbkgtuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_474_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) absbkgtuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_474_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   absbkgtuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new absbkgtuple_t(*(absbkgtuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef absbkgtuple_t G__Tabsbkgtuple_t;
static int G__g4numiCint_474_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (absbkgtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((absbkgtuple_t*) (soff+(sizeof(absbkgtuple_t)*i)))->~G__Tabsbkgtuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (absbkgtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((absbkgtuple_t*) (soff))->~G__Tabsbkgtuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_474_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   absbkgtuple_t* dest = (absbkgtuple_t*) G__getstructoffset();
   *dest = *(absbkgtuple_t*) libp->para[0].ref;
   const absbkgtuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* zptuple_t */
static int G__g4numiCint_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   zptuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new zptuple_t[n];
     } else {
       p = new((void*) gvp) zptuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new zptuple_t;
     } else {
       p = new((void*) gvp) zptuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) zptuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) zptuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      zptuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const zptuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) zptuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_475_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) zptuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_475_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   zptuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new zptuple_t(*(zptuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef zptuple_t G__Tzptuple_t;
static int G__g4numiCint_475_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (zptuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((zptuple_t*) (soff+(sizeof(zptuple_t)*i)))->~G__Tzptuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (zptuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((zptuple_t*) (soff))->~G__Tzptuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   zptuple_t* dest = (zptuple_t*) G__getstructoffset();
   *dest = *(zptuple_t*) libp->para[0].ref;
   const zptuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* h1trackingplane_exit_t */
static int G__g4numiCint_476_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   h1trackingplane_exit_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new h1trackingplane_exit_t[n];
     } else {
       p = new((void*) gvp) h1trackingplane_exit_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new h1trackingplane_exit_t;
     } else {
       p = new((void*) gvp) h1trackingplane_exit_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_h1trackingplane_exit_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) h1trackingplane_exit_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) h1trackingplane_exit_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) h1trackingplane_exit_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      h1trackingplane_exit_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const h1trackingplane_exit_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((h1trackingplane_exit_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((h1trackingplane_exit_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((h1trackingplane_exit_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) h1trackingplane_exit_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) h1trackingplane_exit_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) h1trackingplane_exit_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_476_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) h1trackingplane_exit_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_476_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   h1trackingplane_exit_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new h1trackingplane_exit_t(*(h1trackingplane_exit_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_h1trackingplane_exit_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef h1trackingplane_exit_t G__Th1trackingplane_exit_t;
static int G__g4numiCint_476_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (h1trackingplane_exit_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((h1trackingplane_exit_t*) (soff+(sizeof(h1trackingplane_exit_t)*i)))->~G__Th1trackingplane_exit_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (h1trackingplane_exit_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((h1trackingplane_exit_t*) (soff))->~G__Th1trackingplane_exit_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_476_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   h1trackingplane_exit_t* dest = (h1trackingplane_exit_t*) G__getstructoffset();
   *dest = *(h1trackingplane_exit_t*) libp->para[0].ref;
   const h1trackingplane_exit_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ProdTuple_t */
static int G__g4numiCint_477_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ProdTuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ProdTuple_t[n];
     } else {
       p = new((void*) gvp) ProdTuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ProdTuple_t;
     } else {
       p = new((void*) gvp) ProdTuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ProdTuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ProdTuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ProdTuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ProdTuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ProdTuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_477_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ProdTuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_477_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ProdTuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ProdTuple_t(*(ProdTuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ProdTuple_t G__TProdTuple_t;
static int G__g4numiCint_477_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ProdTuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ProdTuple_t*) (soff+(sizeof(ProdTuple_t)*i)))->~G__TProdTuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ProdTuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ProdTuple_t*) (soff))->~G__TProdTuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_477_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ProdTuple_t* dest = (ProdTuple_t*) G__getstructoffset();
   *dest = *(ProdTuple_t*) libp->para[0].ref;
   const ProdTuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackInfo_t */
static int G__g4numiCint_520_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo_t[n];
     } else {
       p = new((void*) gvp) TrackInfo_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo_t;
     } else {
       p = new((void*) gvp) TrackInfo_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrackInfo_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrackInfo_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrackInfo_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TrackInfo_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_520_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_520_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackInfo_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackInfo_t(*(TrackInfo_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackInfo_t G__TTrackInfo_t;
static int G__g4numiCint_520_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackInfo_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackInfo_t*) (soff+(sizeof(TrackInfo_t)*i)))->~G__TTrackInfo_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackInfo_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackInfo_t*) (soff))->~G__TTrackInfo_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_520_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo_t* dest = (TrackInfo_t*) G__getstructoffset();
   *dest = *(TrackInfo_t*) libp->para[0].ref;
   const TrackInfo_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim */

/* bsim::Location */
static int G__g4numiCint_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Location* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Location[n];
     } else {
       p = new((void*) gvp) bsim::Location[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Location;
     } else {
       p = new((void*) gvp) bsim::Location;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Location* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new bsim::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) bsim::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((string*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::Location*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::Location*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::Location*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::Location*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::Location::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Location::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::Location::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::Location::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::Location*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Location*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Location*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Location*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Location::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Location::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Location::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Location::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::Location* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::Location(*(bsim::Location*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::Location G__TbsimcLcLLocation;
static int G__g4numiCint_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::Location*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::Location*) (soff+(sizeof(bsim::Location)*i)))->~G__TbsimcLcLLocation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::Location*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::Location*) (soff))->~G__TbsimcLcLLocation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Location* dest = (bsim::Location*) G__getstructoffset();
   *dest = *(bsim::Location*) libp->para[0].ref;
   const bsim::Location& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim::DkMeta */
static int G__g4numiCint_523_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::DkMeta* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::DkMeta[n];
     } else {
       p = new((void*) gvp) bsim::DkMeta[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::DkMeta;
     } else {
       p = new((void*) gvp) bsim::DkMeta;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDkMeta));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::DkMeta*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::DkMeta*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::DkMeta*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::DkMeta*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::DkMeta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::DkMeta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::DkMeta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::DkMeta::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::DkMeta*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::DkMeta*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::DkMeta*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::DkMeta*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::DkMeta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::DkMeta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::DkMeta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_523_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::DkMeta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_523_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::DkMeta* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::DkMeta(*(bsim::DkMeta*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDkMeta));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::DkMeta G__TbsimcLcLDkMeta;
static int G__g4numiCint_523_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::DkMeta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::DkMeta*) (soff+(sizeof(bsim::DkMeta)*i)))->~G__TbsimcLcLDkMeta();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::DkMeta*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::DkMeta*) (soff))->~G__TbsimcLcLDkMeta();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_523_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::DkMeta* dest = (bsim::DkMeta*) G__getstructoffset();
   *dest = *(bsim::DkMeta*) libp->para[0].ref;
   const bsim::DkMeta& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim::NuRay */
static int G__g4numiCint_534_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::NuRay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::NuRay[n];
     } else {
       p = new((void*) gvp) bsim::NuRay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::NuRay;
     } else {
       p = new((void*) gvp) bsim::NuRay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::NuRay* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new bsim::NuRay(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) bsim::NuRay(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::NuRay*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::NuRay*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::NuRay*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::NuRay*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::NuRay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::NuRay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::NuRay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::NuRay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::NuRay*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::NuRay*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::NuRay*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::NuRay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::NuRay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::NuRay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::NuRay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_534_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::NuRay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_534_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::NuRay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::NuRay(*(bsim::NuRay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::NuRay G__TbsimcLcLNuRay;
static int G__g4numiCint_534_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::NuRay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::NuRay*) (soff+(sizeof(bsim::NuRay)*i)))->~G__TbsimcLcLNuRay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::NuRay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::NuRay*) (soff))->~G__TbsimcLcLNuRay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_534_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::NuRay* dest = (bsim::NuRay*) G__getstructoffset();
   *dest = *(bsim::NuRay*) libp->para[0].ref;
   const bsim::NuRay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim::Decay */
static int G__g4numiCint_535_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Decay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Decay[n];
     } else {
       p = new((void*) gvp) bsim::Decay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Decay;
     } else {
       p = new((void*) gvp) bsim::Decay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::Decay*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::Decay*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::Decay*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::Decay*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::Decay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Decay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::Decay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::Decay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::Decay*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Decay*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Decay*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Decay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Decay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Decay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Decay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_535_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Decay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_535_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::Decay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::Decay(*(bsim::Decay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::Decay G__TbsimcLcLDecay;
static int G__g4numiCint_535_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::Decay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::Decay*) (soff+(sizeof(bsim::Decay)*i)))->~G__TbsimcLcLDecay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::Decay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::Decay*) (soff))->~G__TbsimcLcLDecay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_535_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Decay* dest = (bsim::Decay*) G__getstructoffset();
   *dest = *(bsim::Decay*) libp->para[0].ref;
   const bsim::Decay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim::Ancestor */
static int G__g4numiCint_536_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Ancestor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Ancestor[n];
     } else {
       p = new((void*) gvp) bsim::Ancestor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Ancestor;
     } else {
       p = new((void*) gvp) bsim::Ancestor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLAncestor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::Ancestor*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::Ancestor*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::Ancestor*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::Ancestor*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Ancestor*) G__getstructoffset())->SetStartXYZT((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Ancestor*) G__getstructoffset())->SetStartP((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Ancestor*) G__getstructoffset())->SetStopP((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Ancestor*) G__getstructoffset())->SetPProdP((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const bsim::Ancestor*) G__getstructoffset())->r());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const bsim::Ancestor*) G__getstructoffset())->startpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const bsim::Ancestor*) G__getstructoffset())->startp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const bsim::Ancestor*) G__getstructoffset())->stoppt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const bsim::Ancestor*) G__getstructoffset())->stopp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const bsim::Ancestor*) G__getstructoffset())->pprodpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const bsim::Ancestor*) G__getstructoffset())->pprodp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::Ancestor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Ancestor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::Ancestor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::Ancestor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::Ancestor*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Ancestor*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Ancestor*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Ancestor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Ancestor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Ancestor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Ancestor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_536_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Ancestor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_536_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::Ancestor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::Ancestor(*(bsim::Ancestor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLAncestor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::Ancestor G__TbsimcLcLAncestor;
static int G__g4numiCint_536_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::Ancestor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::Ancestor*) (soff+(sizeof(bsim::Ancestor)*i)))->~G__TbsimcLcLAncestor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::Ancestor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::Ancestor*) (soff))->~G__TbsimcLcLAncestor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_536_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Ancestor* dest = (bsim::Ancestor*) G__getstructoffset();
   *dest = *(bsim::Ancestor*) libp->para[0].ref;
   const bsim::Ancestor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim::TgtExit */
static int G__g4numiCint_537_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::TgtExit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::TgtExit[n];
     } else {
       p = new((void*) gvp) bsim::TgtExit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::TgtExit;
     } else {
       p = new((void*) gvp) bsim::TgtExit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::TgtExit*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::TgtExit*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::TgtExit*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::TgtExit*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::TgtExit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::TgtExit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::TgtExit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::TgtExit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::TgtExit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::TgtExit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::TgtExit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::TgtExit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::TgtExit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::TgtExit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::TgtExit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_537_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::TgtExit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_537_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::TgtExit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::TgtExit(*(bsim::TgtExit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::TgtExit G__TbsimcLcLTgtExit;
static int G__g4numiCint_537_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::TgtExit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::TgtExit*) (soff+(sizeof(bsim::TgtExit)*i)))->~G__TbsimcLcLTgtExit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::TgtExit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::TgtExit*) (soff))->~G__TbsimcLcLTgtExit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_537_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::TgtExit* dest = (bsim::TgtExit*) G__getstructoffset();
   *dest = *(bsim::TgtExit*) libp->para[0].ref;
   const bsim::TgtExit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim::Traj */
static int G__g4numiCint_538_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Traj* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Traj[n];
     } else {
       p = new((void*) gvp) bsim::Traj[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Traj;
     } else {
       p = new((void*) gvp) bsim::Traj;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTraj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::Traj*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::Traj*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::Traj*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::Traj*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::Traj::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Traj::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::Traj::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::Traj::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::Traj*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Traj*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Traj*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Traj*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Traj::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Traj::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Traj::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_538_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Traj::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_538_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::Traj* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::Traj(*(bsim::Traj*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTraj));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::Traj G__TbsimcLcLTraj;
static int G__g4numiCint_538_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::Traj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::Traj*) (soff+(sizeof(bsim::Traj)*i)))->~G__TbsimcLcLTraj();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::Traj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::Traj*) (soff))->~G__TbsimcLcLTraj();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_538_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Traj* dest = (bsim::Traj*) G__getstructoffset();
   *dest = *(bsim::Traj*) libp->para[0].ref;
   const bsim::Traj& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bsim::Dk2Nu */
static int G__g4numiCint_539_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Dk2Nu* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Dk2Nu[n];
     } else {
       p = new((void*) gvp) bsim::Dk2Nu[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bsim::Dk2Nu;
     } else {
       p = new((void*) gvp) bsim::Dk2Nu;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDk2Nu));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((bsim::Dk2Nu*) G__getstructoffset())->clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((bsim::Dk2Nu*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const string* pobj;
         const string xobj = ((const bsim::Dk2Nu*) G__getstructoffset())->AsString(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const bsim::Dk2Nu*) G__getstructoffset())->AsString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const bsim::Dk2Nu*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const bsim::Dk2Nu*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const bsim::Dk2Nu*) G__getstructoffset())->indxnu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const bsim::Dk2Nu*) G__getstructoffset())->indxp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const bsim::Dk2Nu*) G__getstructoffset())->indxgp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const bsim::Dk2Nu*) G__getstructoffset())->overflow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bsim::Dk2Nu::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Dk2Nu::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bsim::Dk2Nu::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bsim::Dk2Nu::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const bsim::Dk2Nu*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Dk2Nu*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Dk2Nu*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bsim::Dk2Nu*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Dk2Nu::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Dk2Nu::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bsim::Dk2Nu::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_539_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bsim::Dk2Nu::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_539_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   bsim::Dk2Nu* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new bsim::Dk2Nu(*(bsim::Dk2Nu*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDk2Nu));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bsim::Dk2Nu G__TbsimcLcLDk2Nu;
static int G__g4numiCint_539_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bsim::Dk2Nu*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bsim::Dk2Nu*) (soff+(sizeof(bsim::Dk2Nu)*i)))->~G__TbsimcLcLDk2Nu();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bsim::Dk2Nu*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bsim::Dk2Nu*) (soff))->~G__TbsimcLcLDk2Nu();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_539_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bsim::Dk2Nu* dest = (bsim::Dk2Nu*) G__getstructoffset();
   *dest = *(bsim::Dk2Nu*) libp->para[0].ref;
   const bsim::Dk2Nu& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* data_t */

/* hadmmtuple_t */

/* draytupleSPB_t */

/* Edep_t */

/* draytupleMIB_t */

/* absbkgtuple_t */

/* zptuple_t */

/* h1trackingplane_exit_t */

/* ProdTuple_t */

/* TrackInfo_t */

/* bsim */

/* bsim::Location */

/* bsim::DkMeta */

/* bsim::NuRay */

/* bsim::Decay */

/* bsim::Ancestor */

/* bsim::TgtExit */

/* bsim::Traj */

/* bsim::Dk2Nu */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncg4numiCint {
 public:
  G__Sizep2memfuncg4numiCint(): p(&G__Sizep2memfuncg4numiCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncg4numiCint::*p)();
};

size_t G__get_sizep2memfuncg4numiCint()
{
  G__Sizep2memfuncg4numiCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceg4numiCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableg4numiCint() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float>",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float,less<int> >",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IFMap",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IVec",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Edep_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Edep_t,less<int> >",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IEdepMap",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),0,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<bsim::Location>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("flgbitval_t",117,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLflgbitval),0,G__get_linked_tagnum(&G__g4numiCintLN_bsim));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("dkproc_t",117,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),0,G__get_linked_tagnum(&G__g4numiCintLN_bsim));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<bsim::NuRay>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<bsim::Ancestor>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<bsim::Traj>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* data_t */
static void G__setup_memvardata_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   { data_t *p; p=(data_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamHWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamHWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamVWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamVWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuTarZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nuTarZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hornCurrent)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hornCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ndxdz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ndydz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Npz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Npz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nenergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdxdzNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdxdzNear[11]=",0,"was 9");
   G__memvar_setup((void*)((long)(&p->NdydzNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdydzNear[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NenergyN)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NenergyN[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWtNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NWtNear[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdxdzFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdxdzFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdydzFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdydzFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NenergyF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NenergyF[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWtFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NWtFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Norig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Norig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndecay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Ndecay=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ntype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Ntype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppdxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdxdz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppdydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdydz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pppz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pppz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppenergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppmedium)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppmedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupare)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mupare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Necm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Necm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xpoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ypoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ypoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zpoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrajectory)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntrajectory=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->overflow)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"overflow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pdg[10]=",0,"particle pdg code");
   G__memvar_setup((void*)((long)(&p->trackId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trackId[10]=",0,"particle trackId ");
   G__memvar_setup((void*)((long)(&p->parentId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"parentId[10]=",0,"parentId ");
   G__memvar_setup((void*)((long)(&p->startx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startx[10]=",0,"particle x initial position, mm");
   G__memvar_setup((void*)((long)(&p->starty)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"starty[10]=",0,"particle y initial position");
   G__memvar_setup((void*)((long)(&p->startz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startz[10]=",0,"particle z initial position");
   G__memvar_setup((void*)((long)(&p->stopx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stopx[10]=",0,"particle x final position");
   G__memvar_setup((void*)((long)(&p->stopy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stopy[10]=",0,"particle y final position");
   G__memvar_setup((void*)((long)(&p->stopz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stopz[10]=",0,"particle z final position");
   G__memvar_setup((void*)((long)(&p->startpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpx[10]=",0,"particle x initial momentum, MeV/c");
   G__memvar_setup((void*)((long)(&p->startpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpy[10]=",0,"particle y initial momentum");
   G__memvar_setup((void*)((long)(&p->startpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpz[10]=",0,"particle z initial momentum");
   G__memvar_setup((void*)((long)(&p->stoppx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppx[10]=",0,"particle x final momentum");
   G__memvar_setup((void*)((long)(&p->stoppy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppy[10]=",0,"particle y final momentum");
   G__memvar_setup((void*)((long)(&p->stoppz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppz[10]=",0,"particle z final momentum");
   G__memvar_setup((void*)((long)(&p->pprodpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpx[10]=",0,"parent x momentum when producing this particle, MeV/c");
   G__memvar_setup((void*)((long)(&p->pprodpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpy[10]=",0,"parent y momentum when producing this particle");
   G__memvar_setup((void*)((long)(&p->pprodpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpz[10]=",0,"parent z momentum when producing this particle");
   G__memvar_setup((void*)((long)(&p->proc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TString),-1,-1,1,"proc[10]=",0,"name of the process that creates this particle");
   G__memvar_setup((void*)((long)(&p->ivol)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TString),-1,-1,1,"ivol[10]=",0,"name of the volume where the particle starts");
   G__memvar_setup((void*)((long)(&p->fvol)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TString),-1,-1,1,"fvol[10]=",0,"name of the volume where the particle stops");
   G__memvar_setup((void*)((long)(&p->trkx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkx[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trky)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trky[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkz[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpx[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpy[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpz[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* hadmmtuple_t */
static void G__setup_memvarhadmmtuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   { hadmmtuple_t *p; p=(hadmmtuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"protonx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protony)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"protony=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"protonz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muweight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muweight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"tpptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"pptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppmedium)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ppmedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pgen)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"pgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmxpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmxpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmypos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmzpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmzpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cell)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"cell[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kSize)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"kSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuray_px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nuray_px[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuray_py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nuray_py[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuray_pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nuray_pz[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuray_E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nuray_E[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuray_wgt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nuray_wgt[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z1xpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z1xpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z1ypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z1ypos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z1zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z1zpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z1px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z1px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z1py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z1py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z1pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z1pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z2xpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z2xpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z2ypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z2ypos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z2zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z2zpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z2px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z2px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z2py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z2py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z2pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z2pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z3xpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z3xpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z3ypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z3ypos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z3zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z3zpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z3px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z3px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z3py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z3py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z3pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z3pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z4xpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z4xpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z4ypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z4ypos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z4zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z4zpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z4px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z4px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z4py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z4py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z4pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z4pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z5xpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z5xpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z5ypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z5ypos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z5zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z5zpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z5px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z5px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z5py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z5py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z5pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z5pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z6xpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z6xpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z6ypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z6ypos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z6zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z6zpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z6px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z6px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z6py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z6py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z6pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z6pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z7xpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z7xpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z7ypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z7ypos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z7zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z7zpos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z7px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z7px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z7py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z7py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z7pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z7pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* draytupleSPB_t */
static void G__setup_memvardraytupleSPB_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   { draytupleSPB_t *p; p=(draytupleSPB_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmxpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmxpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmypos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cell)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"cell[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mu_edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mu_edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->int_edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"int_edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ext_edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ext_edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Edep_t */
static void G__setup_memvarEdep_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   { Edep_t *p; p=(Edep_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTracks)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"nTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wghtedNTracks)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"wghtedNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumEdepWghts)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sumEdepWghts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumWghtdEdep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sumWghtdEdep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumWghtdEdep2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sumWghtdEdep2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackVec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"trackVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* draytupleMIB_t */
static void G__setup_memvardraytupleMIB_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   { draytupleMIB_t *p; p=(draytupleMIB_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muweight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muweight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmxpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmxpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmypos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cell)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"cell[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),G__defined_typename("IFMap"),-1,4,"mm1_mu_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),G__defined_typename("IFMap"),-1,4,"mm2_mu_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),G__defined_typename("IFMap"),-1,4,"mm3_mu_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm1_int_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm2_int_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm3_int_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm1_ext_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm2_ext_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm3_ext_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* absbkgtuple_t */
static void G__setup_memvarabsbkgtuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   { absbkgtuple_t *p; p=(absbkgtuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ihorn)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ihorn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgtz)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgtz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"KE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->impwt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"impwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* zptuple_t */
static void G__setup_memvarzptuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   { zptuple_t *p; p=(zptuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->yposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"yposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xmomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xmomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ymomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ymomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zmomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zmomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->matilen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"matilen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->field)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"field=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pathlength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pathlength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptypeatz)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptypeatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pidtype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pidtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zpoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* h1trackingplane_exit_t */
static void G__setup_memvarh1trackingplane_exit_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_h1trackingplane_exit_t));
   { h1trackingplane_exit_t *p; p=(h1trackingplane_exit_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->job)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"job=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->impwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"impwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tof)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tptype=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ProdTuple_t */
static void G__setup_memvarProdTuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   { ProdTuple_t *p; p=(ProdTuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDG)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDG[150]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"X[150][3]=",0,"Initial position of the track");
   G__memvar_setup((void*)((long)(&p->P)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"P[150][4]=",0,"4-momentum. P[maxPart][3] is the energy");
   G__memvar_setup((void*)((long)(&p->XF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"XF[150]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT[150]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FF)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"FF[150]=",0,"true if particle was produced by a quickly decaying particle which G4 explicitly produces (tau<1e-16 sec: pi0, eta, eta', sigma0)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrackInfo_t */
static void G__setup_memvarTrackInfo_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   { TrackInfo_t *p; p=(TrackInfo_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TVector3),-1,-1,1,"Pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TLorentzVector),-1,-1,1,"Mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDGcode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDGcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FromFast)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"FromFast=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim */
static void G__setup_memvarbsim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsim));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLflgbitval),-1,-2,1,G__FastAllocString(2048).Format("kFlgOverflow=%lldLL",(long long)bsim::kFlgOverflow).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLflgbitval),-1,-2,1,G__FastAllocString(2048).Format("kMaskReserved=%lldLL",(long long)bsim::kMaskReserved).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLflgbitval),-1,-2,1,G__FastAllocString(2048).Format("kMaskUser=%lldLL",(long long)bsim::kMaskUser).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_unknown=%lldLL",(long long)bsim::dkp_unknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_k0l_nuepimep=%lldLL",(long long)bsim::dkp_k0l_nuepimep).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_k0l_nuebpipem=%lldLL",(long long)bsim::dkp_k0l_nuebpipem).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_k0l_numupimmup=%lldLL",(long long)bsim::dkp_k0l_numupimmup).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_k0l_numubpipmum=%lldLL",(long long)bsim::dkp_k0l_numubpipmum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_kp_numumup=%lldLL",(long long)bsim::dkp_kp_numumup).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_kp_nuepi0ep=%lldLL",(long long)bsim::dkp_kp_nuepi0ep).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_kp_numupi0mup=%lldLL",(long long)bsim::dkp_kp_numupi0mup).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_kp_numubmum=%lldLL",(long long)bsim::dkp_kp_numubmum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_kp_nuebpi0em=%lldLL",(long long)bsim::dkp_kp_nuebpi0em).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_kp_numubpi0mum=%lldLL",(long long)bsim::dkp_kp_numubpi0mum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_mup_nusep=%lldLL",(long long)bsim::dkp_mup_nusep).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_mum_nusep=%lldLL",(long long)bsim::dkp_mum_nusep).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dk_pip_numumup=%lldLL",(long long)bsim::dk_pip_numumup).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dk_pim_numubmum=%lldLL",(long long)bsim::dk_pim_numubmum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_maximum=%lldLL",(long long)bsim::dkp_maximum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLdkproc),-1,-2,1,G__FastAllocString(2048).Format("dkp_other=%lldLL",(long long)bsim::dkp_other).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::Location */
static void G__setup_memvarbsimcLcLLocation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation));
   { bsim::Location *p; p=(bsim::Location*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"x=",0,"/< x position of location");
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"y=",0,"/< y position of location");
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z=",0,"/< z position of location");
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"name=",0,"/< identifying name");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::DkMeta */
static void G__setup_memvarbsimcLcLDkMeta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDkMeta));
   { bsim::DkMeta *p; p=(bsim::DkMeta*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->job)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"job=",0,"/< identifying job # (keep files distinct)");
   G__memvar_setup((void*)((long)(&p->pots)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pots=",0,"/< protons-on-target");
   G__memvar_setup((void*)((long)(&p->beamsim)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"beamsim=",0,"/< e.g. \"flugg\" or \"g4numi/<tag>\"");
   G__memvar_setup((void*)((long)(&p->physics)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"physics=",0,"/< e.g. \"fluka08\", \"g4.9.3p01\"");
   G__memvar_setup((void*)((long)(&p->physcuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"physcuts=",0,"/< tracking cuts    e.g. \"threshold=0.1GeV\"");
   G__memvar_setup((void*)((long)(&p->tgtcfg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"tgtcfg=",0,"/< target config    e.g. \"minos/epoch3/-10cm\"");
   G__memvar_setup((void*)((long)(&p->horncfg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"horncfg=",0,"/< horn config      e.g. \"FHC/185A/LE/h1xoff=1mm\"");
   G__memvar_setup((void*)((long)(&p->dkvolcfg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"dkvolcfg=",0,"/< decay vol config e.g. \"helium\" or \"vacuum\"");
   G__memvar_setup((void*)((long)(&p->beam0x)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam0x=",0,"/< x of beam center at start");
   G__memvar_setup((void*)((long)(&p->beam0y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam0y=",0,"/< y of beam center at start");
   G__memvar_setup((void*)((long)(&p->beam0z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam0z=",0,"/< z of beam start");
   G__memvar_setup((void*)((long)(&p->beamhwidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamhwidth=",0,"/< horizontal width of beam");
   G__memvar_setup((void*)((long)(&p->beamvwidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamvwidth=",0,"/< vertical width of beam");
   G__memvar_setup((void*)((long)(&p->beamdxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamdxdz=",0,"/< beam slope dx/dz");
   G__memvar_setup((void*)((long)(&p->beamdydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamdydz=",0,"/< beam slope dy/dz");
   G__memvar_setup((void*)((long)(&p->location)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgR),G__defined_typename("vector<bsim::Location>"),-1,1,"location=",0,"/< locations");
   G__memvar_setup((void*)((long)(&p->vintnames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"vintnames=",0,"/< names of elements for user defined vector of integers");
   G__memvar_setup((void*)((long)(&p->vdblnames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"vdblnames=",0,"/< names of elements for user defined vector of doubles");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::NuRay */
static void G__setup_memvarbsimcLcLNuRay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay));
   { bsim::NuRay *p; p=(bsim::NuRay*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"px=",0,"/< px for nu at location");
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"py=",0,"/< py for nu at location");
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pz=",0,"/< pz for nu at location");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"E=",0,"/< E for nu at location");
   G__memvar_setup((void*)((long)(&p->wgt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"wgt=",0,"/< weight for nu at location");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::Decay */
static void G__setup_memvarbsimcLcLDecay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay));
   { bsim::Decay *p; p=(bsim::Decay*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->norig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"norig=",0,"/< not used?");
   G__memvar_setup((void*)((long)(&p->ndecay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ndecay=",0,"/< decay process (see dkproc_t)");
   G__memvar_setup((void*)((long)(&p->ntype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntype=",0,"/< % neutrino flavor (PDG? code)");
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vx=",0,"/< % neutrino production vertex x");
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vy=",0,"/< % neutrino production vertex y");
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vz=",0,"/< % neutrino production vertex z");
   G__memvar_setup((void*)((long)(&p->pdpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdpx=",0,"/< % px momentum of nu parent at (vx,vy,vz)");
   G__memvar_setup((void*)((long)(&p->pdpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdpy=",0,"/< % py momentum of nu parent at (vx,vy,vz)");
   G__memvar_setup((void*)((long)(&p->pdpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdpz=",0,"/< % pz momentum of nu parent at (vx,vy,vz)");
   G__memvar_setup((void*)((long)(&p->ppdxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdxdz=",0,"/< % direction of nu parent at its production point");
   G__memvar_setup((void*)((long)(&p->ppdydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdydz=",0,"/< % direction of nu parent at its production point");
   G__memvar_setup((void*)((long)(&p->pppz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pppz=",0,"/< % z momentum of nu parent at its production point");
   G__memvar_setup((void*)((long)(&p->ppenergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppenergy=",0,"/< % energy of nu parent at its production point");
   G__memvar_setup((void*)((long)(&p->ppmedium)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ppmedium=",0,"/< material nu parent was produced in");
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptype=",0,"/< % nu parent species (PDG? code)");
   G__memvar_setup((void*)((long)(&p->muparpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpx=",0,"/< %");
   G__memvar_setup((void*)((long)(&p->muparpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpy=",0,"/< %");
   G__memvar_setup((void*)((long)(&p->muparpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpz=",0,"/< %");
   G__memvar_setup((void*)((long)(&p->mupare)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mupare=",0,"/< % energy of nu grandparent");
   G__memvar_setup((void*)((long)(&p->necm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"necm=",0,"/< % nu energy in center-of-mass frame");
   G__memvar_setup((void*)((long)(&p->nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nimpwt=",0,"/< % cumulative importance weight prod to decay");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::Ancestor */
static void G__setup_memvarbsimcLcLAncestor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLAncestor));
   { bsim::Ancestor *p; p=(bsim::Ancestor*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pdg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pdg=",0,"/< ancestor species");
   G__memvar_setup((void*)((long)(&p->startx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startx=",0,"/< particle x initial position");
   G__memvar_setup((void*)((long)(&p->starty)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"starty=",0,"/< particle y initial position");
   G__memvar_setup((void*)((long)(&p->startz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startz=",0,"/< particle z initial position");
   G__memvar_setup((void*)((long)(&p->startt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startt=",0,"/< particle initial time");
   G__memvar_setup((void*)((long)(&p->startpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpx=",0,"/< particle x initial momentum");
   G__memvar_setup((void*)((long)(&p->startpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpy=",0,"/< particle y initial momentum");
   G__memvar_setup((void*)((long)(&p->startpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpz=",0,"/< particle z initial momentum");
   G__memvar_setup((void*)((long)(&p->stoppx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppx=",0,"/< particle x final momentum");
   G__memvar_setup((void*)((long)(&p->stoppy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppy=",0,"/< particle y final momentum");
   G__memvar_setup((void*)((long)(&p->stoppz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppz=",0,"/< particle z final momentum");
   G__memvar_setup((void*)((long)(&p->polx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"polx=",0,"/< x component of polarization");
   G__memvar_setup((void*)((long)(&p->poly)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"poly=",0,"/< y component of polarization");
   G__memvar_setup((void*)((long)(&p->polz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"polz=",0,"/< z component of polarization");
   G__memvar_setup((void*)((long)(&p->pprodpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpx=",0,"/< parent x momentum when producing this particle");
   G__memvar_setup((void*)((long)(&p->pprodpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpy=",0,"/< parent y momentum when producing this particle");
   G__memvar_setup((void*)((long)(&p->pprodpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpz=",0,"/< parent z momentum when producing this particle");
   G__memvar_setup((void*)((long)(&p->nucleus)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nucleus=",0,"/< nucleus (PDG) type causing the scatter");
   G__memvar_setup((void*)((long)(&p->proc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"proc=",0,"/< name of the process that creates this particle");
   G__memvar_setup((void*)((long)(&p->ivol)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"ivol=",0,"/< name of the volume where the particle starts");
   G__memvar_setup((void*)((long)(&p->imat)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_string),-1,-1,1,"imat=",0,"/< name of the material where the particle starts");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::TgtExit */
static void G__setup_memvarbsimcLcLTgtExit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit));
   { bsim::TgtExit *p; p=(bsim::TgtExit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvx=",0,"/< x position of nu ancestor as it exits target");
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvy=",0,"/< y position of nu ancestor as it exits target");
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvz=",0,"/< z position of nu ancestor as it exits target");
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpx=",0,"/< x momentum of nu ancestor as it exits target");
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpy=",0,"/< y momentum of nu ancestor as it exits target");
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpz=",0,"/< z momentum of nu ancestor as it exits target");
   G__memvar_setup((void*)((long)(&p->tptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tptype=",0,"/< species of ancestor exiting the target");
   G__memvar_setup((void*)((long)(&p->tgen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgen=",0,"/< nu parent generation in cascade:");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::Traj */
static void G__setup_memvarbsimcLcLTraj(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTraj));
   { bsim::Traj *p; p=(bsim::Traj*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->trkx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trky)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trky=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpz=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bsim::Dk2Nu */
static void G__setup_memvarbsimcLcLDk2Nu(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDk2Nu));
   { bsim::Dk2Nu *p; p=(bsim::Dk2Nu*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->job)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"job=",0,"/< identifying job #");
   G__memvar_setup((void*)((long)(&p->potnum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"potnum=",0,"/< proton # processed by simulation");
   G__memvar_setup((void*)((long)(&p->decay)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay),-1,-1,1,"decay=",0,"/< basic decay information");
   G__memvar_setup((void*)((long)(&p->nuray)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgR),G__defined_typename("vector<bsim::NuRay>"),-1,1,"nuray=",0,"/< rays through detector fixed points");
   G__memvar_setup((void*)((long)(&p->ancestor)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgR),G__defined_typename("vector<bsim::Ancestor>"),-1,1,"ancestor=",0,"/< chain from proton to neutrino");
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvx=",0,"/< production vertex x of nu parent");
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvy=",0,"/< production vertex y of nu parent");
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvz=",0,"/< production vertex z of nu parent");
   G__memvar_setup((void*)((long)(&p->tgtexit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit),-1,-1,1,"tgtexit=",0,"/< info about leaving the target");
   G__memvar_setup((void*)((long)(&p->traj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgR),G__defined_typename("vector<bsim::Traj>"),-1,1,"traj=",0,"/< [optional] trajectory points");
   G__memvar_setup((void*)((long)(&p->flagbits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"flagbits=",0,"/< bits signify non-std setting such as");
   G__memvar_setup((void*)((long)(&p->vint)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"vint=",0,"/< user defined vector of integers");
   G__memvar_setup((void*)((long)(&p->vdbl)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"vdbl=",0,"/< user defined vector of doubles");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarg4numiCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdata_t(void) {
   /* data_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   G__memfunc_setup("data_t",621,G__g4numiCint_216_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_216_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_216_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&data_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_216_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&data_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_216_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&data_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_216_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&data_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_216_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_216_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_216_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_216_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_216_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&data_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_216_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&data_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_216_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&data_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_216_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&data_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("data_t", 621, G__g4numiCint_216_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 0, 1, 1, 1, 0, "u 'data_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~data_t", 747, G__g4numiCint_216_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_216_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 1, 1, 1, 1, 0, "u 'data_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunchadmmtuple_t(void) {
   /* hadmmtuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   G__memfunc_setup("hadmmtuple_t",1284,G__g4numiCint_217_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_217_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_217_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&hadmmtuple_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_217_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&hadmmtuple_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_217_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&hadmmtuple_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_217_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&hadmmtuple_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_217_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_217_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_217_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_217_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_217_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&hadmmtuple_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_217_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&hadmmtuple_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_217_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&hadmmtuple_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_217_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&hadmmtuple_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("hadmmtuple_t", 1284, G__g4numiCint_217_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 0, 1, 1, 1, 0, "u 'hadmmtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~hadmmtuple_t", 1410, G__g4numiCint_217_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_217_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 1, 1, 1, 1, 0, "u 'hadmmtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdraytupleSPB_t(void) {
   /* draytupleSPB_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   G__memfunc_setup("draytupleSPB_t",1426,G__g4numiCint_218_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_218_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_218_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&draytupleSPB_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_218_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&draytupleSPB_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_218_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&draytupleSPB_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_218_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&draytupleSPB_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_218_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_218_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_218_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_218_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_218_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&draytupleSPB_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_218_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&draytupleSPB_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_218_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&draytupleSPB_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_218_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&draytupleSPB_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("draytupleSPB_t", 1426, G__g4numiCint_218_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t), -1, 0, 1, 1, 1, 0, "u 'draytupleSPB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~draytupleSPB_t", 1552, G__g4numiCint_218_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_218_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t), -1, 1, 1, 1, 1, 0, "u 'draytupleSPB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdep_t(void) {
   /* Edep_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   G__memfunc_setup("Edep_t",593,G__g4numiCint_454_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_Edep_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVector",1114,G__g4numiCint_454_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_454_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Edep_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_454_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Edep_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_454_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Edep_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_454_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Edep_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_454_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_454_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_454_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_454_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_454_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Edep_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_454_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Edep_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_454_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Edep_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_454_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Edep_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Edep_t", 593, G__g4numiCint_454_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_Edep_t), -1, 0, 1, 1, 1, 0, "u 'Edep_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Edep_t", 719, G__g4numiCint_454_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_454_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_Edep_t), -1, 1, 1, 1, 1, 0, "u 'Edep_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdraytupleMIB_t(void) {
   /* draytupleMIB_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__memfunc_setup("draytupleMIB_t",1413,G__g4numiCint_459_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_459_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuEdep",864,G__g4numiCint_459_0_3, 100, -1, -1, 0, 2, 1, 1, 9, 
"i - - 10 - mon i - - 10 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntEdep",969,G__g4numiCint_459_0_4, 100, -1, -1, 0, 3, 1, 1, 9, 
"i - - 10 - mon i - - 10 - cell "
"u 'string' - 11 '\"edep\"' varname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtEdep",975,G__g4numiCint_459_0_5, 100, -1, -1, 0, 3, 1, 1, 9, 
"i - - 10 - mon i - - 10 - cell "
"u 'string' - 11 '\"edep\"' varname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuEdep",876,G__g4numiCint_459_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 10 - mon i - - 10 - cell "
"d - - 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntEdep",981,G__g4numiCint_459_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 10 - mon i - - 10 - cell "
"d - - 10 - value i - - 10 - trackID "
"d - - 10 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtEdep",987,G__g4numiCint_459_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 10 - mon i - - 10 - cell "
"d - - 10 - value i - - 10 - trackID "
"d - - 10 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTrackIDVectors",1871,G__g4numiCint_459_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVectors",1229,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'map<int,Edep_t,less<int>,allocator<pair<const int,Edep_t> > >' 'draytupleMIB_t::IEdepMap' 1 - Map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_459_0_11, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&draytupleMIB_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_459_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&draytupleMIB_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_459_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&draytupleMIB_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_459_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&draytupleMIB_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_459_0_15, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_459_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_459_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_459_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_459_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&draytupleMIB_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_459_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&draytupleMIB_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_459_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&draytupleMIB_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_459_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&draytupleMIB_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("draytupleMIB_t", 1413, G__g4numiCint_459_0_23, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t), -1, 0, 1, 1, 1, 0, "u 'draytupleMIB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~draytupleMIB_t", 1539, G__g4numiCint_459_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_459_0_25, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t), -1, 1, 1, 1, 1, 0, "u 'draytupleMIB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncabsbkgtuple_t(void) {
   /* absbkgtuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   G__memfunc_setup("absbkgtuple_t",1383,G__g4numiCint_474_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_474_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_474_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&absbkgtuple_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_474_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&absbkgtuple_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_474_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&absbkgtuple_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_474_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&absbkgtuple_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_474_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_474_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_474_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_474_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_474_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&absbkgtuple_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_474_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&absbkgtuple_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_474_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&absbkgtuple_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_474_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&absbkgtuple_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("absbkgtuple_t", 1383, G__g4numiCint_474_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t), -1, 0, 1, 1, 1, 0, "u 'absbkgtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~absbkgtuple_t", 1509, G__g4numiCint_474_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_474_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t), -1, 1, 1, 1, 1, 0, "u 'absbkgtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunczptuple_t(void) {
   /* zptuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   G__memfunc_setup("zptuple_t",999,G__g4numiCint_475_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_475_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&zptuple_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_475_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&zptuple_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_475_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&zptuple_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_475_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&zptuple_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_475_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_475_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_475_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_475_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_475_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&zptuple_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_475_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&zptuple_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_475_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&zptuple_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_475_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&zptuple_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("zptuple_t", 999, G__g4numiCint_475_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 0, 1, 1, 1, 0, "u 'zptuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~zptuple_t", 1125, G__g4numiCint_475_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_475_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 1, 1, 1, 1, 0, "u 'zptuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunch1trackingplane_exit_t(void) {
   /* h1trackingplane_exit_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_h1trackingplane_exit_t));
   G__memfunc_setup("h1trackingplane_exit_t",2280,G__g4numiCint_476_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_h1trackingplane_exit_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_476_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&h1trackingplane_exit_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_476_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&h1trackingplane_exit_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_476_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&h1trackingplane_exit_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_476_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&h1trackingplane_exit_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_476_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_476_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_476_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_476_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_476_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&h1trackingplane_exit_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_476_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&h1trackingplane_exit_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_476_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&h1trackingplane_exit_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_476_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&h1trackingplane_exit_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("h1trackingplane_exit_t", 2280, G__g4numiCint_476_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__g4numiCintLN_h1trackingplane_exit_t), -1, 0, 1, 1, 1, 0, "u 'h1trackingplane_exit_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~h1trackingplane_exit_t", 2406, G__g4numiCint_476_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_476_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_h1trackingplane_exit_t), -1, 1, 1, 1, 1, 0, "u 'h1trackingplane_exit_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncProdTuple_t(void) {
   /* ProdTuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   G__memfunc_setup("ProdTuple_t",1138,G__g4numiCint_477_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_477_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ProdTuple_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_477_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ProdTuple_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_477_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ProdTuple_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_477_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ProdTuple_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_477_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_477_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_477_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_477_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_477_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ProdTuple_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_477_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ProdTuple_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_477_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ProdTuple_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_477_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ProdTuple_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ProdTuple_t", 1138, G__g4numiCint_477_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t), -1, 0, 1, 1, 1, 0, "u 'ProdTuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ProdTuple_t", 1264, G__g4numiCint_477_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_477_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t), -1, 1, 1, 1, 1, 0, "u 'ProdTuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackInfo_t(void) {
   /* TrackInfo_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   G__memfunc_setup("TrackInfo_t",1108,G__g4numiCint_520_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_520_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrackInfo_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_520_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_520_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrackInfo_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_520_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrackInfo_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_520_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_520_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_520_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_520_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_520_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_520_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_520_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_520_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackInfo_t", 1108, G__g4numiCint_520_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t), -1, 0, 1, 1, 1, 0, "u 'TrackInfo_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackInfo_t", 1234, G__g4numiCint_520_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_520_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t), -1, 1, 1, 1, 1, 0, "u 'TrackInfo_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsim(void) {
   /* bsim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsim));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLLocation(void) {
   /* bsim::Location */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation));
   G__memfunc_setup("Location",825,G__g4numiCint_522_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Location",825,G__g4numiCint_522_0_2, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation), -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_522_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_522_0_4, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_522_0_5, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::Location::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_522_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Location::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_522_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::Location::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_522_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::Location::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_522_0_9, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_522_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_522_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_522_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_522_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Location::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_522_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Location::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_522_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Location::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_522_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Location::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Location", 825, G__g4numiCint_522_0_17, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation), -1, 0, 1, 1, 1, 0, "u 'bsim::Location' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Location", 951, G__g4numiCint_522_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_522_0_19, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLLocation), -1, 1, 1, 1, 1, 0, "u 'bsim::Location' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLDkMeta(void) {
   /* bsim::DkMeta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDkMeta));
   G__memfunc_setup("DkMeta",566,G__g4numiCint_523_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDkMeta), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_523_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_523_0_3, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", "/< output as a string", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_523_0_4, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::DkMeta::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_523_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::DkMeta::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_523_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::DkMeta::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_523_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::DkMeta::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_523_0_8, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_523_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_523_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_523_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_523_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::DkMeta::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_523_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::DkMeta::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_523_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::DkMeta::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_523_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::DkMeta::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DkMeta", 566, G__g4numiCint_523_0_16, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDkMeta), -1, 0, 1, 1, 1, 0, "u 'bsim::DkMeta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DkMeta", 692, G__g4numiCint_523_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_523_0_18, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDkMeta), -1, 1, 1, 1, 1, 0, "u 'bsim::DkMeta' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLNuRay(void) {
   /* bsim::NuRay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay));
   G__memfunc_setup("NuRay",495,G__g4numiCint_534_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NuRay",495,G__g4numiCint_534_0_2, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay), -1, 0, 5, 1, 1, 0, 
"d - - 0 - px d - - 0 - py "
"d - - 0 - pz d - - 0 - E "
"d - - 0 - wgt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_534_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_534_0_4, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_534_0_5, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::NuRay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_534_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::NuRay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_534_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::NuRay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_534_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::NuRay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_534_0_9, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_534_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_534_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_534_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_534_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::NuRay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_534_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::NuRay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_534_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::NuRay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_534_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::NuRay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("NuRay", 495, G__g4numiCint_534_0_17, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay), -1, 0, 1, 1, 1, 0, "u 'bsim::NuRay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NuRay", 621, G__g4numiCint_534_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_534_0_19, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLNuRay), -1, 1, 1, 1, 1, 0, "u 'bsim::NuRay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLDecay(void) {
   /* bsim::Decay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay));
   G__memfunc_setup("Decay",486,G__g4numiCint_535_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_535_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_535_0_3, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_535_0_4, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::Decay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_535_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Decay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_535_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::Decay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_535_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::Decay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_535_0_8, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_535_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_535_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_535_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_535_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Decay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_535_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Decay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_535_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Decay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_535_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Decay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Decay", 486, G__g4numiCint_535_0_16, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay), -1, 0, 1, 1, 1, 0, "u 'bsim::Decay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Decay", 612, G__g4numiCint_535_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_535_0_18, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDecay), -1, 1, 1, 1, 1, 0, "u 'bsim::Decay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLAncestor(void) {
   /* bsim::Ancestor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLAncestor));
   G__memfunc_setup("Ancestor",831,G__g4numiCint_536_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLAncestor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_536_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_536_0_3, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartXYZT",1177,G__g4numiCint_536_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartP",906,G__g4numiCint_536_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStopP",802,G__g4numiCint_536_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPProdP",865,G__g4numiCint_536_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("r",114,G__g4numiCint_536_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("startpt",786,G__g4numiCint_536_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("startp",670,G__g4numiCint_536_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("stoppt",682,G__g4numiCint_536_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("stopp",566,G__g4numiCint_536_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pprodpt",777,G__g4numiCint_536_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pprodp",661,G__g4numiCint_536_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_536_0_15, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::Ancestor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_536_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Ancestor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_536_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::Ancestor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_536_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::Ancestor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_536_0_19, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_536_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_536_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_536_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_536_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Ancestor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_536_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Ancestor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_536_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Ancestor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_536_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Ancestor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ancestor", 831, G__g4numiCint_536_0_27, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLAncestor), -1, 0, 1, 1, 1, 0, "u 'bsim::Ancestor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ancestor", 957, G__g4numiCint_536_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_536_0_29, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLAncestor), -1, 1, 1, 1, 1, 0, "u 'bsim::Ancestor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLTgtExit(void) {
   /* bsim::TgtExit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit));
   G__memfunc_setup("TgtExit",713,G__g4numiCint_537_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_537_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_537_0_3, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_537_0_4, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::TgtExit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_537_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::TgtExit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_537_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::TgtExit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_537_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::TgtExit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_537_0_8, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_537_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_537_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_537_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_537_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::TgtExit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_537_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::TgtExit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_537_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::TgtExit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_537_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::TgtExit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TgtExit", 713, G__g4numiCint_537_0_16, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit), -1, 0, 1, 1, 1, 0, "u 'bsim::TgtExit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TgtExit", 839, G__g4numiCint_537_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_537_0_18, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTgtExit), -1, 1, 1, 1, 1, 0, "u 'bsim::TgtExit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLTraj(void) {
   /* bsim::Traj */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTraj));
   G__memfunc_setup("Traj",401,G__g4numiCint_538_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTraj), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_538_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_538_0_3, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_538_0_4, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::Traj::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_538_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Traj::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_538_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::Traj::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_538_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::Traj::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_538_0_8, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_538_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_538_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_538_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_538_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Traj::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_538_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Traj::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_538_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Traj::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_538_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Traj::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Traj", 401, G__g4numiCint_538_0_16, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTraj), -1, 0, 1, 1, 1, 0, "u 'bsim::Traj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Traj", 527, G__g4numiCint_538_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_538_0_18, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLTraj), -1, 1, 1, 1, 1, 0, "u 'bsim::Traj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbsimcLcLDk2Nu(void) {
   /* bsim::Dk2Nu */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDk2Nu));
   G__memfunc_setup("Dk2Nu",420,G__g4numiCint_539_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDk2Nu), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__g4numiCint_539_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", "/< reset everything", (void*) NULL, 0);
   G__memfunc_setup("AsString",811,G__g4numiCint_539_0_3, 117, G__get_linked_tagnum(&G__g4numiCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__g4numiCint_539_0_4, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("indxnu",662,G__g4numiCint_539_0_5, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", "/< ancestor index of nu ancestor.size()-1", (void*) NULL, 0);
   G__memfunc_setup("indxp",547,G__g4numiCint_539_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", "/< ancestor index of parent ancestor.size()-2", (void*) NULL, 0);
   G__memfunc_setup("indxgp",650,G__g4numiCint_539_0_7, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", "/< ancestor index of grandparent ancestor.size()-3", (void*) NULL, 0);
   G__memfunc_setup("overflow",884,G__g4numiCint_539_0_8, 103, -1, -1, 0, 0, 1, 1, 8, "", "/< ancestor list is incomplete (g4 minerva overflow)", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_539_0_9, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bsim::Dk2Nu::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_539_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Dk2Nu::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_539_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bsim::Dk2Nu::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_539_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bsim::Dk2Nu::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_539_0_13, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_539_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_539_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_539_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_539_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Dk2Nu::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_539_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Dk2Nu::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_539_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bsim::Dk2Nu::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_539_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bsim::Dk2Nu::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Dk2Nu", 420, G__g4numiCint_539_0_21, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDk2Nu), -1, 0, 1, 1, 1, 0, "u 'bsim::Dk2Nu' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Dk2Nu", 546, G__g4numiCint_539_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_539_0_23, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_bsimcLcLDk2Nu), -1, 1, 1, 1, 1, 0, "u 'bsim::Dk2Nu' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncg4numiCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalg4numiCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcg4numiCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__g4numiCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__g4numiCintLN_data_t = { "data_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_hadmmtuple_t = { "hadmmtuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_draytupleSPB_t = { "draytupleSPB_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_Edep_t = { "Edep_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_draytupleMIB_t = { "draytupleMIB_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR = { "map<int,float,less<int>,allocator<pair<const int,float> > >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR = { "map<int,Edep_t,less<int>,allocator<pair<const int,Edep_t> > >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_absbkgtuple_t = { "absbkgtuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_zptuple_t = { "zptuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_h1trackingplane_exit_t = { "h1trackingplane_exit_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_ProdTuple_t = { "ProdTuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TrackInfo_t = { "TrackInfo_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsim = { "bsim" , 110 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLLocation = { "bsim::Location" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLDkMeta = { "bsim::DkMeta" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgR = { "vector<bsim::Location,allocator<bsim::Location> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<bsim::Location,allocator<bsim::Location> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLflgbitval = { "bsim::flgbitval" , 101 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLdkproc = { "bsim::dkproc" , 101 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLNuRay = { "bsim::NuRay" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLDecay = { "bsim::Decay" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLAncestor = { "bsim::Ancestor" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLTgtExit = { "bsim::TgtExit" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLTraj = { "bsim::Traj" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_bsimcLcLDk2Nu = { "bsim::Dk2Nu" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgR = { "vector<bsim::NuRay,allocator<bsim::NuRay> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<bsim::NuRay,allocator<bsim::NuRay> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgR = { "vector<bsim::Ancestor,allocator<bsim::Ancestor> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<bsim::Ancestor,allocator<bsim::Ancestor> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgR = { "vector<bsim::Traj,allocator<bsim::Traj> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<bsim::Traj,allocator<bsim::Traj> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableg4numiCint() {
  G__g4numiCintLN_TClass.tagnum = -1 ;
  G__g4numiCintLN_TBuffer.tagnum = -1 ;
  G__g4numiCintLN_TMemberInspector.tagnum = -1 ;
  G__g4numiCintLN_TString.tagnum = -1 ;
  G__g4numiCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__g4numiCintLN_string.tagnum = -1 ;
  G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__g4numiCintLN_data_t.tagnum = -1 ;
  G__g4numiCintLN_hadmmtuple_t.tagnum = -1 ;
  G__g4numiCintLN_draytupleSPB_t.tagnum = -1 ;
  G__g4numiCintLN_Edep_t.tagnum = -1 ;
  G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_draytupleMIB_t.tagnum = -1 ;
  G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_absbkgtuple_t.tagnum = -1 ;
  G__g4numiCintLN_zptuple_t.tagnum = -1 ;
  G__g4numiCintLN_h1trackingplane_exit_t.tagnum = -1 ;
  G__g4numiCintLN_ProdTuple_t.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__g4numiCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__g4numiCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TVector3.tagnum = -1 ;
  G__g4numiCintLN_TLorentzVector.tagnum = -1 ;
  G__g4numiCintLN_TrackInfo_t.tagnum = -1 ;
  G__g4numiCintLN_bsim.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLLocation.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLDkMeta.tagnum = -1 ;
  G__g4numiCintLN_vectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLflgbitval.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLdkproc.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLNuRay.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLDecay.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLAncestor.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLTgtExit.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLTraj.tagnum = -1 ;
  G__g4numiCintLN_bsimcLcLDk2Nu.tagnum = -1 ;
  G__g4numiCintLN_vectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_vectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_vectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableg4numiCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TString);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_string);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_data_t),sizeof(data_t),-1,263424,"data_t",G__setup_memvardata_t,G__setup_memfuncdata_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_hadmmtuple_t),sizeof(hadmmtuple_t),-1,263424,(char*)NULL,G__setup_memvarhadmmtuple_t,G__setup_memfunchadmmtuple_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_draytupleSPB_t),sizeof(draytupleSPB_t),-1,263424,(char*)NULL,G__setup_memvardraytupleSPB_t,G__setup_memfuncdraytupleSPB_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_Edep_t),sizeof(Edep_t),-1,263424,(char*)NULL,G__setup_memvarEdep_t,G__setup_memfuncEdep_t);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_draytupleMIB_t),sizeof(draytupleMIB_t),-1,263424,(char*)NULL,G__setup_memvardraytupleMIB_t,G__setup_memfuncdraytupleMIB_t);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_absbkgtuple_t),sizeof(absbkgtuple_t),-1,263424,"absbkgtuple_t",G__setup_memvarabsbkgtuple_t,G__setup_memfuncabsbkgtuple_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_zptuple_t),sizeof(zptuple_t),-1,263424,(char*)NULL,G__setup_memvarzptuple_t,G__setup_memfunczptuple_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_h1trackingplane_exit_t),sizeof(h1trackingplane_exit_t),-1,263424,"h1trackingplane_exit_t",G__setup_memvarh1trackingplane_exit_t,G__setup_memfunch1trackingplane_exit_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_ProdTuple_t),sizeof(ProdTuple_t),-1,263424,(char*)NULL,G__setup_memvarProdTuple_t,G__setup_memfuncProdTuple_t);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_TrackInfo_t),sizeof(TrackInfo_t),-1,263424,(char*)NULL,G__setup_memvarTrackInfo_t,G__setup_memfuncTrackInfo_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsim),0,-1,0,(char*)NULL,G__setup_memvarbsim,G__setup_memfuncbsim);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLLocation),sizeof(bsim::Location),-1,296192,(char*)NULL,G__setup_memvarbsimcLcLLocation,G__setup_memfuncbsimcLcLLocation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLDkMeta),sizeof(bsim::DkMeta),-1,263424,(char*)NULL,G__setup_memvarbsimcLcLDkMeta,G__setup_memfuncbsimcLcLDkMeta);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLLocationcOallocatorlEbsimcLcLLocationgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLflgbitval);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLdkproc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLNuRay),sizeof(bsim::NuRay),-1,296192,(char*)NULL,G__setup_memvarbsimcLcLNuRay,G__setup_memfuncbsimcLcLNuRay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLDecay),sizeof(bsim::Decay),-1,263424,(char*)NULL,G__setup_memvarbsimcLcLDecay,G__setup_memfuncbsimcLcLDecay);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLAncestor),sizeof(bsim::Ancestor),-1,263424,(char*)NULL,G__setup_memvarbsimcLcLAncestor,G__setup_memfuncbsimcLcLAncestor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLTgtExit),sizeof(bsim::TgtExit),-1,263424,(char*)NULL,G__setup_memvarbsimcLcLTgtExit,G__setup_memfuncbsimcLcLTgtExit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLTraj),sizeof(bsim::Traj),-1,263424,(char*)NULL,G__setup_memvarbsimcLcLTraj,G__setup_memfuncbsimcLcLTraj);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__g4numiCintLN_bsimcLcLDk2Nu),sizeof(bsim::Dk2Nu),-1,263424,(char*)NULL,G__setup_memvarbsimcLcLDk2Nu,G__setup_memfuncbsimcLcLDk2Nu);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLNuRaycOallocatorlEbsimcLcLNuRaygRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLAncestorcOallocatorlEbsimcLcLAncestorgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEbsimcLcLTrajcOallocatorlEbsimcLcLTrajgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupg4numiCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupg4numiCint()");
  G__set_cpp_environmentg4numiCint();
  G__cpp_setup_tagtableg4numiCint();

  G__cpp_setup_inheritanceg4numiCint();

  G__cpp_setup_typetableg4numiCint();

  G__cpp_setup_memvarg4numiCint();

  G__cpp_setup_memfuncg4numiCint();
  G__cpp_setup_globalg4numiCint();
  G__cpp_setup_funcg4numiCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncg4numiCint();
  return;
}
class G__cpp_setup_initg4numiCint {
  public:
    G__cpp_setup_initg4numiCint() { G__add_setup_func("g4numiCint",(G__incsetup)(&G__cpp_setupg4numiCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initg4numiCint() { G__remove_setup_func("g4numiCint"); }
};
G__cpp_setup_initg4numiCint G__cpp_setup_initializerg4numiCint;

