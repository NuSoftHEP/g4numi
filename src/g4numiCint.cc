//
// File generated by rootcint at Thu Feb  4 14:32:01 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "g4numiCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void data_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_data_t(void *p = 0);
   static void *newArray_data_t(Long_t size, void *p);
   static void delete_data_t(void *p);
   static void deleteArray_data_t(void *p);
   static void destruct_data_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::data_t*)
   {
      ::data_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::data_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("data_t", ::data_t::Class_Version(), "./include/../include/data_t.hh", 15,
                  typeid(::data_t), DefineBehavior(ptr, ptr),
                  &::data_t::Dictionary, isa_proxy, 4,
                  sizeof(::data_t) );
      instance.SetNew(&new_data_t);
      instance.SetNewArray(&newArray_data_t);
      instance.SetDelete(&delete_data_t);
      instance.SetDeleteArray(&deleteArray_data_t);
      instance.SetDestructor(&destruct_data_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::data_t*)
   {
      return GenerateInitInstanceLocal((::data_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::data_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void hadmmtuple_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_hadmmtuple_t(void *p = 0);
   static void *newArray_hadmmtuple_t(Long_t size, void *p);
   static void delete_hadmmtuple_t(void *p);
   static void deleteArray_hadmmtuple_t(void *p);
   static void destruct_hadmmtuple_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::hadmmtuple_t*)
   {
      ::hadmmtuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::hadmmtuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("hadmmtuple_t", ::hadmmtuple_t::Class_Version(), "./include/../include/hadmmtuple_t.hh", 18,
                  typeid(::hadmmtuple_t), DefineBehavior(ptr, ptr),
                  &::hadmmtuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::hadmmtuple_t) );
      instance.SetNew(&new_hadmmtuple_t);
      instance.SetNewArray(&newArray_hadmmtuple_t);
      instance.SetDelete(&delete_hadmmtuple_t);
      instance.SetDeleteArray(&deleteArray_hadmmtuple_t);
      instance.SetDestructor(&destruct_hadmmtuple_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::hadmmtuple_t*)
   {
      return GenerateInitInstanceLocal((::hadmmtuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void zptuple_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_zptuple_t(void *p = 0);
   static void *newArray_zptuple_t(Long_t size, void *p);
   static void delete_zptuple_t(void *p);
   static void deleteArray_zptuple_t(void *p);
   static void destruct_zptuple_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::zptuple_t*)
   {
      ::zptuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::zptuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("zptuple_t", ::zptuple_t::Class_Version(), "./include/../include/zptuple_t.hh", 15,
                  typeid(::zptuple_t), DefineBehavior(ptr, ptr),
                  &::zptuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::zptuple_t) );
      instance.SetNew(&new_zptuple_t);
      instance.SetNewArray(&newArray_zptuple_t);
      instance.SetDelete(&delete_zptuple_t);
      instance.SetDeleteArray(&deleteArray_zptuple_t);
      instance.SetDestructor(&destruct_zptuple_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::zptuple_t*)
   {
      return GenerateInitInstanceLocal((::zptuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::zptuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *data_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *data_t::Class_Name()
{
   return "data_t";
}

//______________________________________________________________________________
const char *data_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int data_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void data_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *data_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *hadmmtuple_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *hadmmtuple_t::Class_Name()
{
   return "hadmmtuple_t";
}

//______________________________________________________________________________
const char *hadmmtuple_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int hadmmtuple_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void hadmmtuple_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *hadmmtuple_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *zptuple_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *zptuple_t::Class_Name()
{
   return "zptuple_t";
}

//______________________________________________________________________________
const char *zptuple_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int zptuple_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void zptuple_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *zptuple_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void data_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class data_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(data_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(data_t::Class(),this);
   }
}

//______________________________________________________________________________
void data_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class data_t.
      TClass *R__cl = ::data_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "run", &run);
      R__insp.Inspect(R__cl, R__parent, "evtno", &evtno);
      R__insp.Inspect(R__cl, R__parent, "beamHWidth", &beamHWidth);
      R__insp.Inspect(R__cl, R__parent, "beamVWidth", &beamVWidth);
      R__insp.Inspect(R__cl, R__parent, "beamX", &beamX);
      R__insp.Inspect(R__cl, R__parent, "beamY", &beamY);
      R__insp.Inspect(R__cl, R__parent, "protonX", &protonX);
      R__insp.Inspect(R__cl, R__parent, "protonY", &protonY);
      R__insp.Inspect(R__cl, R__parent, "protonZ", &protonZ);
      R__insp.Inspect(R__cl, R__parent, "protonPx", &protonPx);
      R__insp.Inspect(R__cl, R__parent, "protonPy", &protonPy);
      R__insp.Inspect(R__cl, R__parent, "protonPz", &protonPz);
      R__insp.Inspect(R__cl, R__parent, "nuTarZ", &nuTarZ);
      R__insp.Inspect(R__cl, R__parent, "hornCurrent", &hornCurrent);
      R__insp.Inspect(R__cl, R__parent, "Ndxdz", &Ndxdz);
      R__insp.Inspect(R__cl, R__parent, "Ndydz", &Ndydz);
      R__insp.Inspect(R__cl, R__parent, "Npz", &Npz);
      R__insp.Inspect(R__cl, R__parent, "Nenergy", &Nenergy);
      R__insp.Inspect(R__cl, R__parent, "NdxdzNear[11]", NdxdzNear);
      R__insp.Inspect(R__cl, R__parent, "NdydzNear[11]", NdydzNear);
      R__insp.Inspect(R__cl, R__parent, "NenergyN[11]", NenergyN);
      R__insp.Inspect(R__cl, R__parent, "NWtNear[11]", NWtNear);
      R__insp.Inspect(R__cl, R__parent, "NdxdzFar[2]", NdxdzFar);
      R__insp.Inspect(R__cl, R__parent, "NdydzFar[2]", NdydzFar);
      R__insp.Inspect(R__cl, R__parent, "NenergyF[2]", NenergyF);
      R__insp.Inspect(R__cl, R__parent, "NWtFar[2]", NWtFar);
      R__insp.Inspect(R__cl, R__parent, "Norig", &Norig);
      R__insp.Inspect(R__cl, R__parent, "Ndecay", &Ndecay);
      R__insp.Inspect(R__cl, R__parent, "Ntype", &Ntype);
      R__insp.Inspect(R__cl, R__parent, "Vx", &Vx);
      R__insp.Inspect(R__cl, R__parent, "Vy", &Vy);
      R__insp.Inspect(R__cl, R__parent, "Vz", &Vz);
      R__insp.Inspect(R__cl, R__parent, "pdPx", &pdPx);
      R__insp.Inspect(R__cl, R__parent, "pdPy", &pdPy);
      R__insp.Inspect(R__cl, R__parent, "pdPz", &pdPz);
      R__insp.Inspect(R__cl, R__parent, "ppdxdz", &ppdxdz);
      R__insp.Inspect(R__cl, R__parent, "ppdydz", &ppdydz);
      R__insp.Inspect(R__cl, R__parent, "pppz", &pppz);
      R__insp.Inspect(R__cl, R__parent, "ppenergy", &ppenergy);
      R__insp.Inspect(R__cl, R__parent, "ppmedium", &ppmedium);
      R__insp.Inspect(R__cl, R__parent, "ptype", &ptype);
      R__insp.Inspect(R__cl, R__parent, "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__parent, "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__parent, "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__parent, "muparpx", &muparpx);
      R__insp.Inspect(R__cl, R__parent, "muparpy", &muparpy);
      R__insp.Inspect(R__cl, R__parent, "muparpz", &muparpz);
      R__insp.Inspect(R__cl, R__parent, "mupare", &mupare);
      R__insp.Inspect(R__cl, R__parent, "Necm", &Necm);
      R__insp.Inspect(R__cl, R__parent, "Nimpwt", &Nimpwt);
      R__insp.Inspect(R__cl, R__parent, "xpoint", &xpoint);
      R__insp.Inspect(R__cl, R__parent, "ypoint", &ypoint);
      R__insp.Inspect(R__cl, R__parent, "zpoint", &zpoint);
      R__insp.Inspect(R__cl, R__parent, "tvx", &tvx);
      R__insp.Inspect(R__cl, R__parent, "tvy", &tvy);
      R__insp.Inspect(R__cl, R__parent, "tvz", &tvz);
      R__insp.Inspect(R__cl, R__parent, "tpx", &tpx);
      R__insp.Inspect(R__cl, R__parent, "tpy", &tpy);
      R__insp.Inspect(R__cl, R__parent, "tpz", &tpz);
      R__insp.Inspect(R__cl, R__parent, "tptype", &tptype);
      R__insp.Inspect(R__cl, R__parent, "tgen", &tgen);
      R__insp.Inspect(R__cl, R__parent, "trkx[10]", trkx);
      R__insp.Inspect(R__cl, R__parent, "trky[10]", trky);
      R__insp.Inspect(R__cl, R__parent, "trkz[10]", trkz);
      R__insp.Inspect(R__cl, R__parent, "trkpx[10]", trkpx);
      R__insp.Inspect(R__cl, R__parent, "trkpy[10]", trkpy);
      R__insp.Inspect(R__cl, R__parent, "trkpz[10]", trkpz);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_data_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::data_t : new ::data_t;
   }
   static void *newArray_data_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::data_t[nElements] : new ::data_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_data_t(void *p) {
      delete ((::data_t*)p);
   }
   static void deleteArray_data_t(void *p) {
      delete [] ((::data_t*)p);
   }
   static void destruct_data_t(void *p) {
      typedef ::data_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::data_t

//______________________________________________________________________________
void hadmmtuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class hadmmtuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(hadmmtuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(hadmmtuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void hadmmtuple_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class hadmmtuple_t.
      TClass *R__cl = ::hadmmtuple_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "evtno", &evtno);
      R__insp.Inspect(R__cl, R__parent, "muvx", &muvx);
      R__insp.Inspect(R__cl, R__parent, "muvy", &muvy);
      R__insp.Inspect(R__cl, R__parent, "mupx", &mupx);
      R__insp.Inspect(R__cl, R__parent, "mupy", &mupy);
      R__insp.Inspect(R__cl, R__parent, "mupz", &mupz);
      R__insp.Inspect(R__cl, R__parent, "muweight", &muweight);
      R__insp.Inspect(R__cl, R__parent, "tvx", &tvx);
      R__insp.Inspect(R__cl, R__parent, "tvy", &tvy);
      R__insp.Inspect(R__cl, R__parent, "tvz", &tvz);
      R__insp.Inspect(R__cl, R__parent, "tpx", &tpx);
      R__insp.Inspect(R__cl, R__parent, "tpy", &tpy);
      R__insp.Inspect(R__cl, R__parent, "tpz", &tpz);
      R__insp.Inspect(R__cl, R__parent, "tpptype", &tpptype);
      R__insp.Inspect(R__cl, R__parent, "nimpwt", &nimpwt);
      R__insp.Inspect(R__cl, R__parent, "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__parent, "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__parent, "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__parent, "pdvx", &pdvx);
      R__insp.Inspect(R__cl, R__parent, "pdvy", &pdvy);
      R__insp.Inspect(R__cl, R__parent, "pdvz", &pdvz);
      R__insp.Inspect(R__cl, R__parent, "pdpx", &pdpx);
      R__insp.Inspect(R__cl, R__parent, "pdpy", &pdpy);
      R__insp.Inspect(R__cl, R__parent, "pdpz", &pdpz);
      R__insp.Inspect(R__cl, R__parent, "pptype", &pptype);
      R__insp.Inspect(R__cl, R__parent, "ptype", &ptype);
      R__insp.Inspect(R__cl, R__parent, "ppmedium", &ppmedium);
      R__insp.Inspect(R__cl, R__parent, "pgen", &pgen);
      R__insp.Inspect(R__cl, R__parent, "mmxpos[3]", mmxpos);
      R__insp.Inspect(R__cl, R__parent, "mmypos[3]", mmypos);
      R__insp.Inspect(R__cl, R__parent, "mmpx[3]", mmpx);
      R__insp.Inspect(R__cl, R__parent, "mmpy[3]", mmpy);
      R__insp.Inspect(R__cl, R__parent, "mmpz[3]", mmpz);
      R__insp.Inspect(R__cl, R__parent, "cell[3]", cell);
      R__insp.Inspect(R__cl, R__parent, "mmpx_Edep[3]", mmpx_Edep);
      R__insp.Inspect(R__cl, R__parent, "mmpy_Edep[3]", mmpy_Edep);
      R__insp.Inspect(R__cl, R__parent, "mmpz_Edep[3]", mmpz_Edep);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_hadmmtuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hadmmtuple_t : new ::hadmmtuple_t;
   }
   static void *newArray_hadmmtuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hadmmtuple_t[nElements] : new ::hadmmtuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_hadmmtuple_t(void *p) {
      delete ((::hadmmtuple_t*)p);
   }
   static void deleteArray_hadmmtuple_t(void *p) {
      delete [] ((::hadmmtuple_t*)p);
   }
   static void destruct_hadmmtuple_t(void *p) {
      typedef ::hadmmtuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::hadmmtuple_t

//______________________________________________________________________________
void zptuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class zptuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(zptuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(zptuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void zptuple_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class zptuple_t.
      TClass *R__cl = ::zptuple_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "run", &run);
      R__insp.Inspect(R__cl, R__parent, "evtno", &evtno);
      R__insp.Inspect(R__cl, R__parent, "xposatz", &xposatz);
      R__insp.Inspect(R__cl, R__parent, "yposatz", &yposatz);
      R__insp.Inspect(R__cl, R__parent, "zposatz", &zposatz);
      R__insp.Inspect(R__cl, R__parent, "xmomatz", &xmomatz);
      R__insp.Inspect(R__cl, R__parent, "ymomatz", &ymomatz);
      R__insp.Inspect(R__cl, R__parent, "zmomatz", &zmomatz);
      R__insp.Inspect(R__cl, R__parent, "matilen", &matilen);
      R__insp.Inspect(R__cl, R__parent, "field", &field);
      R__insp.Inspect(R__cl, R__parent, "pathlength", &pathlength);
      R__insp.Inspect(R__cl, R__parent, "ptypeatz", &ptypeatz);
      R__insp.Inspect(R__cl, R__parent, "pidtype", &pidtype);
      R__insp.Inspect(R__cl, R__parent, "zpoint", &zpoint);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_zptuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::zptuple_t : new ::zptuple_t;
   }
   static void *newArray_zptuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::zptuple_t[nElements] : new ::zptuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_zptuple_t(void *p) {
      delete ((::zptuple_t*)p);
   }
   static void deleteArray_zptuple_t(void *p) {
      delete [] ((::zptuple_t*)p);
   }
   static void destruct_zptuple_t(void *p) {
      typedef ::zptuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::zptuple_t

/********************************************************
* ./src/g4numiCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableg4numiCint();

extern "C" void G__set_cpp_environmentg4numiCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/data_t.hh");
  G__add_compiledheader("../include/hadmmtuple_t.hh");
  G__add_compiledheader("../include/zptuple_t.hh");
  G__cpp_reset_tagtableg4numiCint();
}
#include <new>
extern "C" int G__cpp_dllrevg4numiCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* data_t */
static int G__g4numiCint_136_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   data_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new data_t[n];
     } else {
       p = new((void*) gvp) data_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new data_t;
     } else {
       p = new((void*) gvp) data_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__g4numiCintLN_data_t);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) data_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) data_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      data_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const data_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) data_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_136_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) data_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_136_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   data_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new data_t(*(data_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__g4numiCintLN_data_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef data_t G__Tdata_t;
static int G__g4numiCint_136_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (data_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((data_t*) (soff+(sizeof(data_t)*i)))->~G__Tdata_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (data_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((data_t*) (soff))->~G__Tdata_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_136_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   data_t* dest = (data_t*) G__getstructoffset();
   *dest = *(data_t*) libp->para[0].ref;
   const data_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* hadmmtuple_t */
static int G__g4numiCint_137_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hadmmtuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hadmmtuple_t[n];
     } else {
       p = new((void*) gvp) hadmmtuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hadmmtuple_t;
     } else {
       p = new((void*) gvp) hadmmtuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) hadmmtuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) hadmmtuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      hadmmtuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const hadmmtuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hadmmtuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_137_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hadmmtuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_137_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   hadmmtuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new hadmmtuple_t(*(hadmmtuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef hadmmtuple_t G__Thadmmtuple_t;
static int G__g4numiCint_137_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (hadmmtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((hadmmtuple_t*) (soff+(sizeof(hadmmtuple_t)*i)))->~G__Thadmmtuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (hadmmtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((hadmmtuple_t*) (soff))->~G__Thadmmtuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_137_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hadmmtuple_t* dest = (hadmmtuple_t*) G__getstructoffset();
   *dest = *(hadmmtuple_t*) libp->para[0].ref;
   const hadmmtuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* zptuple_t */
static int G__g4numiCint_138_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   zptuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new zptuple_t[n];
     } else {
       p = new((void*) gvp) zptuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new zptuple_t;
     } else {
       p = new((void*) gvp) zptuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) zptuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) zptuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      zptuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const zptuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) zptuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_138_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) zptuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_138_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   zptuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new zptuple_t(*(zptuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef zptuple_t G__Tzptuple_t;
static int G__g4numiCint_138_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (zptuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((zptuple_t*) (soff+(sizeof(zptuple_t)*i)))->~G__Tzptuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (zptuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((zptuple_t*) (soff))->~G__Tzptuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_138_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   zptuple_t* dest = (zptuple_t*) G__getstructoffset();
   *dest = *(zptuple_t*) libp->para[0].ref;
   const zptuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* data_t */

/* hadmmtuple_t */

/* zptuple_t */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncg4numiCint {
 public:
  G__Sizep2memfuncg4numiCint(): p(&G__Sizep2memfuncg4numiCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncg4numiCint::*p)();
};

size_t G__get_sizep2memfuncg4numiCint()
{
  G__Sizep2memfuncg4numiCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceg4numiCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableg4numiCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* data_t */
static void G__setup_memvardata_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   { data_t *p; p=(data_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamHWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamHWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamVWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamVWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuTarZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nuTarZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hornCurrent)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hornCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ndxdz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ndydz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Npz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Npz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nenergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdxdzNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdxdzNear[11]=",0,"was 9");
   G__memvar_setup((void*)((long)(&p->NdydzNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdydzNear[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NenergyN)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NenergyN[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWtNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NWtNear[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdxdzFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdxdzFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdydzFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdydzFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NenergyF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NenergyF[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWtFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NWtFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Norig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Norig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndecay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Ndecay=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ntype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Ntype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppdxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdxdz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppdydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdydz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pppz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pppz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppenergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppmedium)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppmedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupare)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mupare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Necm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Necm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xpoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ypoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ypoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zpoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkx[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trky)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trky[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkz[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpx[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpy[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpz[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* hadmmtuple_t */
static void G__setup_memvarhadmmtuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   { hadmmtuple_t *p; p=(hadmmtuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muweight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muweight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"tpptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"pptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppmedium)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ppmedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pgen)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"pgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmxpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmxpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmypos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cell)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"cell[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* zptuple_t */
static void G__setup_memvarzptuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   { zptuple_t *p; p=(zptuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->yposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"yposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xmomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xmomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ymomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ymomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zmomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zmomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->matilen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"matilen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->field)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"field=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pathlength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pathlength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptypeatz)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptypeatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pidtype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pidtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zpoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarg4numiCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdata_t(void) {
   /* data_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   G__memfunc_setup("data_t",621,G__g4numiCint_136_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_136_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&data_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_136_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&data_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_136_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&data_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_136_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&data_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_136_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_136_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_136_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_136_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_136_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&data_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_136_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&data_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_136_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&data_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_136_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&data_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("data_t", 621, G__g4numiCint_136_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 0, 1, 1, 1, 0, "u 'data_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~data_t", 747, G__g4numiCint_136_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_136_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 1, 1, 1, 1, 0, "u 'data_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunchadmmtuple_t(void) {
   /* hadmmtuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   G__memfunc_setup("hadmmtuple_t",1284,G__g4numiCint_137_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_137_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_137_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&hadmmtuple_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_137_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&hadmmtuple_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_137_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&hadmmtuple_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_137_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&hadmmtuple_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_137_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_137_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_137_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_137_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_137_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&hadmmtuple_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_137_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&hadmmtuple_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_137_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&hadmmtuple_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_137_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&hadmmtuple_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("hadmmtuple_t", 1284, G__g4numiCint_137_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 0, 1, 1, 1, 0, "u 'hadmmtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~hadmmtuple_t", 1410, G__g4numiCint_137_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_137_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 1, 1, 1, 1, 0, "u 'hadmmtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunczptuple_t(void) {
   /* zptuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   G__memfunc_setup("zptuple_t",999,G__g4numiCint_138_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_138_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&zptuple_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_138_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&zptuple_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_138_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&zptuple_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_138_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&zptuple_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_138_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_138_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_138_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_138_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_138_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&zptuple_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_138_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&zptuple_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_138_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&zptuple_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_138_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&zptuple_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("zptuple_t", 999, G__g4numiCint_138_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 0, 1, 1, 1, 0, "u 'zptuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~zptuple_t", 1125, G__g4numiCint_138_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_138_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 1, 1, 1, 1, 0, "u 'zptuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncg4numiCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalg4numiCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcg4numiCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__g4numiCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__g4numiCintLN_data_t = { "data_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_hadmmtuple_t = { "hadmmtuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_zptuple_t = { "zptuple_t" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableg4numiCint() {
  G__g4numiCintLN_TClass.tagnum = -1 ;
  G__g4numiCintLN_TBuffer.tagnum = -1 ;
  G__g4numiCintLN_TMemberInspector.tagnum = -1 ;
  G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__g4numiCintLN_data_t.tagnum = -1 ;
  G__g4numiCintLN_hadmmtuple_t.tagnum = -1 ;
  G__g4numiCintLN_zptuple_t.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableg4numiCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t),sizeof(data_t),-1,263424,"data_t",G__setup_memvardata_t,G__setup_memfuncdata_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t),sizeof(hadmmtuple_t),-1,263424,(char*)NULL,G__setup_memvarhadmmtuple_t,G__setup_memfunchadmmtuple_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t),sizeof(zptuple_t),-1,263424,(char*)NULL,G__setup_memvarzptuple_t,G__setup_memfunczptuple_t);
}
extern "C" void G__cpp_setupg4numiCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupg4numiCint()");
  G__set_cpp_environmentg4numiCint();
  G__cpp_setup_tagtableg4numiCint();

  G__cpp_setup_inheritanceg4numiCint();

  G__cpp_setup_typetableg4numiCint();

  G__cpp_setup_memvarg4numiCint();

  G__cpp_setup_memfuncg4numiCint();
  G__cpp_setup_globalg4numiCint();
  G__cpp_setup_funcg4numiCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncg4numiCint();
  return;
}
class G__cpp_setup_initg4numiCint {
  public:
    G__cpp_setup_initg4numiCint() { G__add_setup_func("g4numiCint",(G__incsetup)(&G__cpp_setupg4numiCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initg4numiCint() { G__remove_setup_func("g4numiCint"); }
};
G__cpp_setup_initg4numiCint G__cpp_setup_initializerg4numiCint;

